{
 "execution_paths": "66", 
 "callstack": false, 
 "reentrancy": true, 
 "modulo": false, 
 "division": false, 
 "execution_time": "1800.08073521", 
 "signedness": "\nOpcode: DIV\nInput: [31 + mem_[1152 + Id_5], 32]\nOutput: [Concat(0, Extract(255, 5, 31 + mem_[1152 + Id_5]))]\nOpcode: SLT\nInput: [Ia_store_17538019647970835019711868592823625637367893721088 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nId_2, 50]\nOutput: [If(50 <=\n   Ia_store_17538019647970835019711868592823625637367893721088 +\n   115792089237316195423570985008687907853269984665640564039457584007913129639935*\n   Id_2,\n   0,\n   1)]\nOpcode: SGT\nInput: [mem_[1152 + Id_5], 288]\nOutput: [If(mem_[1152 + Id_5] <= 288, 0, 1)]\nOpcode: SGT\nInput: [Id_7, 1870129]\nOutput: [If(Id_7 <= 1870129, 0, 1)]\nOpcode: SDIV\nInput: [Id_6*some_var_38, 52324493117866193979L]\nOutput: [bvsdiv_i(If(0 <= Id_6*some_var_38,\n            Id_6*some_var_38,\n            115792089237316195423570985008687907853269984665640564039457584007913129639935*\n            Id_6*\n            some_var_38),\n         52324493117866193979)]", 
 "evm_code_coverage": "100.0", 
 "underflow": "\nOpcode: SUB\nInput: [1184 + Id_5, 32]\nOutput: [1152 + Id_5]\nOpcode: SUB\nInput: [Ia_store_17538019647970835019711868592823625637367893721088, Id_2]\nOutput: [Ia_store_17538019647970835019711868592823625637367893721088 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nId_2]", 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": true, 
 "dead_code": [], 
 "overflow": "\nOpcode: MUL\nInput: [Id_6, some_var_39]\nOutput: [Id_6*some_var_39]\nOpcode: ADD\nInput: [1184L, Id_5]\nOutput: [1184 + Id_5]\nOpcode: MUL\nInput: [Id_6, 6065306]\nOutput: [6065306*Id_6]\nOpcode: MUL\nInput: [Id_6, some_var_38]\nOutput: [Id_6*some_var_38]\nOpcode: MUL\nInput: [Id_6, Id_7]\nOutput: [Id_6*Id_7]", 
 "money_concurrency": true, 
 "truncation": false
}