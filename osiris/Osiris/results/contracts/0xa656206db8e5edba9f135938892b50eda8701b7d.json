{
 "execution_paths": "106", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "31.780985117", 
 "signedness": false, 
 "evm_code_coverage": "70.5", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "SUB ", 
  "DUP8 ", 
  "SUB ", 
  "PUSH2 0xffff ", 
  "DUP2 ", 
  "DIV ", 
  "AND ", 
  "LT ", 
  "LT ", 
  "POP ", 
  "ISZERO ", 
  "PUSH2 0x034a ", 
  "PUSH1 0x20 ", 
  "PUSH2 0xffff ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x02 ", 
  "AND ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x02 ", 
  "DUP9 ", 
  "DUP8 ", 
  "PUSH1 0x03 ", 
  "PUSH1 0x03 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x0280 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "JUMPDEST ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0297 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH2 0x02a6 ", 
  "DUP12 ", 
  "DUP12 ", 
  "PUSH2 0x0398 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0xff ", 
  "AND ", 
  "GT ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "PUSH2 0x02e0 ", 
  "JUMPI ", 
  "JUMPI ", 
  "DUP4 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "DUP6 ", 
  "DUP6 ", 
  "SUB ", 
  "PUSH2 0xffff ", 
  "JUMPDEST ", 
  "AND ", 
  "GT ", 
  "DUP1 ", 
  "PUSH2 0x02cc ", 
  "SWAP1 ", 
  "JUMPI ", 
  "POP ", 
  "PUSH2 0xffff ", 
  "DUP6 ", 
  "DUP6 ", 
  "SUB ", 
  "AND ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "PUSH2 0x02da ", 
  "MLOAD ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH2 0x0387 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP5 ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "SWAP4 ", 
  "MLOAD ", 
  "PUSH1 0xff ", 
  "DUP7 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH2 0x02ed ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "JUMPI ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "AND ", 
  "PUSH2 0x0305 ", 
  "PUSH2 0xffff ", 
  "PUSH1 0x01 ", 
  "DUP12 ", 
  "DUP12 ", 
  "PUSH2 0x0398 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0xff ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x20 ", 
  "DUP1 ", 
  "DUP3 ", 
  "MSTORE ", 
  "DUP2 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "ADD ", 
  "DUP4 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "MUL ", 
  "DUP1 ", 
  "DUP4 ", 
  "DUP4 ", 
  "PUSH1 0x00 ", 
  "DUP2 ", 
  "JUMPDEST ", 
  "DUP4 ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0147 ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "JUMPI ", 
  "DUP1 ", 
  "DUP3 ", 
  "ADD ", 
  "MLOAD ", 
  "DUP4 ", 
  "DUP3 ", 
  "ADD ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "JUMPDEST ", 
  "ADD ", 
  "PUSH2 0x012f ", 
  "DUP2 ", 
  "JUMPDEST ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "SWAP1 ", 
  "POP ", 
  "ADD ", 
  "SWAP3 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "AND ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "AND ", 
  "GT ", 
  "DUP1 ", 
  "PUSH2 0x036b ", 
  "MLOAD ", 
  "JUMPI ", 
  "POP ", 
  "AND ", 
  "DUP2 ", 
  "DUP4 ", 
  "DUP8 ", 
  "SUB ", 
  "PUSH2 0x0345 ", 
  "ISZERO ", 
  "LT ", 
  "PUSH2 0xffff ", 
  "PUSH2 0x0379 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH2 0x0387 ", 
  "MUL ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP3 ", 
  "DUP2 ", 
  "SUB ", 
  "SWAP6 ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "DUP12 ", 
  "ADD ", 
  "PUSH2 0x0235 ", 
  "JUMP ", 
  "PUSH2 0x0398 ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "JUMP ", 
  "PUSH1 0x20 ", 
  "DUP12 ", 
  "ISZERO ", 
  "ASSERTFAIL ", 
  "PUSH1 0xff ", 
  "ADD ", 
  "STOP ", 
  "AND ", 
  "GT ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x037f ", 
  "PUSH2 0x031f ", 
  "MLOAD ", 
  "JUMPI ", 
  "PUSH2 0x0336 ", 
  "DUP6 ", 
  "DUP5 ", 
  "PUSH2 0xffff ", 
  "ISZERO ", 
  "PUSH1 0x20 ", 
  "DUP7 ", 
  "DUP4 "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [452312848583266388373324160190187140051835877600158453279131187530910662656L, Concat(Extract(255, 248, Id_3), 0) >> 248]\nOutput: [452312848583266388373324160190187140051835877600158453279131187530910662656*\n(Concat(Extract(255, 248, Id_3), 0) >> 248)]\nOpcode: MUL\nInput: [452312848583266388373324160190187140051835877600158453279131187530910662656L, ~(~Id_2 |\n  ~(255 <<\n    248 +\n    115792089237316195423570985008687907853269984665640564039457584007913129639928*\n    Concat(0, Extract(4, 0, mem_[224])))) >>\n248 +\n115792089237316195423570985008687907853269984665640564039457584007913129639928*\nConcat(0, Extract(4, 0, mem_[224]))]\nOutput: [452312848583266388373324160190187140051835877600158453279131187530910662656*\n(~(~Id_2 |\n   ~(255 <<\n     248 +\n     115792089237316195423570985008687907853269984665640564039457584007913129639928*\n     Concat(0, Extract(4, 0, mem_[224])))) >>\n 248 +\n 115792089237316195423570985008687907853269984665640564039457584007913129639928*\n Concat(0, Extract(4, 0, mem_[224])))]", 
 "money_concurrency": false, 
 "truncation": false
}