{
 "execution_paths": "77", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "132.748969793", 
 "signedness": false, 
 "evm_code_coverage": "95.8", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "ADD ", 
  "DUP9 ", 
  "SWAP1 ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP1 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "STOP ", 
  "STOP ", 
  "POP ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "DUP8 ", 
  "PUSH32 0x2d63e9f4682ee70ed951b3c53b76204153bf91e3e81574344424eb84e137e098 ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "STOP ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "JUMPDEST ", 
  "STOP ", 
  "PUSH1 0x07 ", 
  "SLOAD ", 
  "TIMESTAMP ", 
  "DUP11 ", 
  "DUP11 ", 
  "DUP11 ", 
  "DUP11 ", 
  "DUP11 ", 
  "DUP11 ", 
  "DUP11 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP11 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP10 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "JUMPDEST ", 
  "STOP ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP8 ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP7 ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP6 ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP5 ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP3 ", 
  "DUP2 ", 
  "SUB ", 
  "DUP3 ", 
  "MSTORE ", 
  "DUP5 ", 
  "DUP5 ", 
  "DUP3 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "POP ", 
  "ADD ", 
  "SWAP3 ", 
  "POP ", 
  "DUP1 ", 
  "DUP3 ", 
  "DUP5 ", 
  "CALLDATACOPY ", 
  "DUP3 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "SWAP11 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "LOG2 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP1 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "JUMP "
 ], 
 "overflow": false, 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [255, Id_12]\nOutput: [Concat(0, Extract(7, 0, Id_12))]\nOpcode: AND\nInput: [255, Id_25]\nOutput: [Concat(0, Extract(7, 0, Id_25))]\nOpcode: AND\nInput: [255, Id_15]\nOutput: [Concat(0, Extract(7, 0, Id_15))]\nOpcode: AND\nInput: [255, Id_23]\nOutput: [Concat(0, Extract(7, 0, Id_23))]\nOpcode: AND\nInput: [255, Id_13]\nOutput: [Concat(0, Extract(7, 0, Id_13))]\nOpcode: AND\nInput: [255, Id_26]\nOutput: [Concat(0, Extract(7, 0, Id_26))]\nOpcode: AND\nInput: [255, Id_24]\nOutput: [Concat(0, Extract(7, 0, Id_24))]\nOpcode: AND\nInput: [255, Id_14]\nOutput: [Concat(0, Extract(7, 0, Id_14))]"
}