{
 "execution_paths": "458", 
 "callstack": false, 
 "reentrancy": true, 
 "modulo": false, 
 "division": false, 
 "execution_time": "1658.96986485", 
 "signedness": false, 
 "evm_code_coverage": "94.8", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "DUP2 ", 
  "SWAP3 ", 
  "POP ", 
  "DUP14 ", 
  "PUSH2 0x176f ", 
  "STOP ", 
  "JUMP ", 
  "SLT ", 
  "DUP1 ", 
  "STOP ", 
  "POP ", 
  "LOG1 ", 
  "STOP ", 
  "STOP ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "DUP12 ", 
  "PUSH1 0x01 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x10ef ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "STOP ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "DUP12 ", 
  "PUSH1 0x0b ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x1106 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "STOP ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "DUP12 ", 
  "PUSH1 0x03 ", 
  "STOP ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x111d ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "DUP13 ", 
  "PUSH1 0x04 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x1134 ", 
  "SWAP8 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "STOP ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "DUP15 ", 
  "PUSH1 0x09 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x114b ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0x40 ", 
  "STOP ", 
  "MLOAD ", 
  "PUSH1 0xe0 ", 
  "STOP ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "PUSH4 0xffffffff ", 
  "INVALID 0xd4 ", 
  "DUP15 ", 
  "AND ", 
  "MUL ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "JUMPDEST ", 
  "PUSH1 0x02 ", 
  "SWAP3 ", 
  "EXP ", 
  "SUB ", 
  "SWAP12 ", 
  "DUP13 ", 
  "AND ", 
  "PUSH1 0x04 ", 
  "DUP3 ", 
  "ADD ", 
  "MSTORE ", 
  "PUSH1 0x24 ", 
  "STOP ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP11 ", 
  "SWAP1 ", 
  "SWAP11 ", 
  "MSTORE ", 
  "SWAP8 ", 
  "DUP11 ", 
  "AND ", 
  "PUSH1 0x44 ", 
  "STOP ", 
  "DUP11 ", 
  "ADD ", 
  "MSTORE ", 
  "PUSH1 0x64 ", 
  "INVALID 0xcb ", 
  "DUP10 ", 
  "ADD ", 
  "SWAP7 ", 
  "SWAP1 ", 
  "SWAP7 ", 
  "MSTORE ", 
  "PUSH1 0x84 ", 
  "DUP9 ", 
  "ADD ", 
  "SWAP5 ", 
  "SWAP1 ", 
  "SWAP5 ", 
  "MSTORE ", 
  "PUSH1 0xa4 ", 
  "DUP8 ", 
  "ADD ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "MSTORE ", 
  "SWAP1 ", 
  "SWAP6 ", 
  "AND ", 
  "PUSH1 0xc4 ", 
  "DUP6 ", 
  "ADD ", 
  "MSTORE ", 
  "PUSH1 0xff ", 
  "SWAP1 ", 
  "SWAP5 ", 
  "AND ", 
  "PUSH1 0xe4 ", 
  "DUP5 ", 
  "ADD ", 
  "MSTORE ", 
  "PUSH2 0x0104 ", 
  "STOP ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP4 ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "MSTORE ", 
  "PUSH2 0x0124 ", 
  "DUP3 ", 
  "ADD ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "MSTORE ", 
  "PUSH2 0x0144 ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "PUSH2 0x0164 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "STOP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "PUSH1 0x00 ", 
  "DUP8 ", 
  "DUP1 ", 
  "EXTCODESIZE ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x11e9 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH2 0x02c6 ", 
  "GAS ", 
  "SUB ", 
  "CALL ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x11fa ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [356, mem_[64]]\nOutput: [356 + mem_[64]]\nOpcode: ADD\nInput: [68, mem_[64]]\nOutput: [68 + mem_[64]]\nOpcode: ADD\nInput: [36, mem_[64]]\nOutput: [36 + mem_[64]]\nOpcode: ADD\nInput: [68, mem_[64]]\nOutput: [68 + mem_[64]]\nOpcode: ADD\nInput: [68, mem_[64]]\nOutput: [68 + mem_[64]]\nOpcode: ADD\nInput: [68, mem_[64]]\nOutput: [68 + mem_[64]]\nOpcode: ADD\nInput: [68, mem_[64]]\nOutput: [68 + mem_[64]]\nOpcode: ADD\nInput: [356, mem_[64]]\nOutput: [356 + mem_[64]]\nOpcode: ADD\nInput: [68, mem_[64]]\nOutput: [68 + mem_[64]]", 
 "money_concurrency": true, 
 "truncation": false
}