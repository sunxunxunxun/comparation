{
 "execution_paths": "97", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": "\nOpcode: DIV\nInput: [Ia_store_3 + Concat(0, Extract(255, 5, Id_4)), some_var_5]\nOutput: [bvudiv_i(Ia_store_3 + Concat(0, Extract(255, 5, Id_4)),\n         some_var_5)]", 
 "execution_time": "8.61087417603", 
 "signedness": false, 
 "evm_code_coverage": "85.9", 
 "underflow": "\nOpcode: SUB\nInput: [Ia_store_67638438215023943772228846233344175164328008513867082059777456063345709179670, Id_7]\nOutput: [Ia_store_67638438215023943772228846233344175164328008513867082059777456063345709179670 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nId_7]", 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "MUL ", 
  "SWAP1 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "PUSH2 0x0682 ", 
  "JUMPDEST ", 
  "JUMP ", 
  "PUSH1 0x20 ", 
  "JUMPDEST ", 
  "DUP3 ", 
  "DIV ", 
  "SWAP3 ", 
  "AND ", 
  "SLOAD ", 
  "JUMP ", 
  "SWAP3 ", 
  "PUSH1 0xff ", 
  "SWAP3 ", 
  "POP ", 
  "MOD ", 
  "PUSH2 0x0d43 ", 
  "JUMPDEST ", 
  "EXP ", 
  "MUL ", 
  "SWAP1 ", 
  "POP ", 
  "AND ", 
  "AND ", 
  "DUP7 ", 
  "JUMP ", 
  "PUSH2 0x0d6c ", 
  "JUMPDEST ", 
  "ASSERTFAIL ", 
  "AND ", 
  "PUSH1 0x09 ", 
  "SWAP3 ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH2 0x0ced ", 
  "DUP6 ", 
  "PUSH2 0x041a ", 
  "DUP3 ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "PUSH2 0x0d6c ", 
  "AND ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "JUMPDEST ", 
  "PUSH1 0x07 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH2 0x0505 ", 
  "PUSH1 0x03 ", 
  "SWAP1 ", 
  "CALLVALUE ", 
  "PUSH4 0xffffffff ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x0d04 ", 
  "PUSH2 0x0d4c ", 
  "PUSH4 0xffffffff ", 
  "JUMPI ", 
  "AND ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x07 ", 
  "DUP1 ", 
  "SSTORE ", 
  "PUSH1 0x01 ", 
  "SWAP1 ", 
  "PUSH1 0xa0 ", 
  "ADD ", 
  "PUSH1 0x02 ", 
  "DUP8 ", 
  "EXP ", 
  "SUB ", 
  "CALLER ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "PUSH2 0x0100 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x01 ", 
  "DIV ", 
  "PUSH1 0x20 ", 
  "PUSH4 0xffffffff ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH2 0x0531 ", 
  "PUSH2 0x0d25 ", 
  "JUMP ", 
  "SWAP1 ", 
  "DUP3 ", 
  "PUSH4 0xffffffff ", 
  "PUSH2 0x0d4c ", 
  "SWAP1 ", 
  "AND ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "POP ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "PUSH1 0x0a ", 
  "EXP ", 
  "SUB ", 
  "CALLER ", 
  "DUP2 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "PUSH2 0x0d4c ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x01 ", 
  "JUMPDEST ", 
  "PUSH1 0x20 ", 
  "SWAP5 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "POP ", 
  "DUP1 ", 
  "DUP3 ", 
  "SHA3 ", 
  "SWAP4 ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "SSTORE ", 
  "PUSH1 0x04 ", 
  "DUP3 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH2 0x0569 ", 
  "SWAP1 ", 
  "DUP3 ", 
  "PUSH4 0xffffffff ", 
  "PUSH4 0xffffffff ", 
  "PUSH2 0x0d50 ", 
  "AND ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x04 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "SWAP1 ", 
  "PUSH1 0xa0 ", 
  "STOP ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x01 ", 
  "PUSH1 0x20 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "SSTORE ", 
  "PUSH1 0x08 ", 
  "JUMP ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP3 ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH32 0xe316e9c07bf6ee91102f762d73f95b6cab9dcc157278814c7408906855c6a3a6 ", 
  "PUSH2 0x0d55 ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0d31 ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x64 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "DUP5 ", 
  "SWAP1 ", 
  "CALLVALUE ", 
  "SWAP1 ", 
  "DUP6 ", 
  "SWAP1 ", 
  "MLOAD ", 
  "SWAP4 ", 
  "DUP5 ", 
  "MSTORE ", 
  "PUSH1 0x01 ", 
  "JUMP ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "PUSH1 0x20 ", 
  "DUP5 ", 
  "ADD ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "DUP5 ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "PUSH1 0x60 ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "PUSH1 0x80 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "LOG1 ", 
  "PUSH1 0x04 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "CALLVALUE ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x08fc "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [Id_7, Ia_store_35820805684861398939135000101655897215189103962105177132422023801474344000614]\nOutput: [Id_7 +\nIa_store_35820805684861398939135000101655897215189103962105177132422023801474344000614]", 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [255, bvudiv_i(Ia_store_3 + Concat(0, Extract(255, 5, Id_4)),\n         some_var_5)]\nOutput: [Concat(0,\n       Extract(7,\n               0,\n               bvudiv_i(Ia_store_3 + Concat(0, Extract(255, 5, Id_4)),\n                        some_var_5)))]"
}