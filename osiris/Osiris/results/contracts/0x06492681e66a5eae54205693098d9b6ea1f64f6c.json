{
 "execution_paths": "39", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "356.26985383", 
 "signedness": false, 
 "evm_code_coverage": "86.0", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "JUMPDEST ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "BYTE ", 
  "PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000 ", 
  "SWAP1 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "AND ", 
  "ISZERO ", 
  "PUSH2 0x022c ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DIV ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MOD ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "BYTE ", 
  "PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000 ", 
  "MUL ", 
  "SWAP1 ", 
  "POP ", 
  "DUP1 ", 
  "POP ", 
  "SWAP1 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "AND ", 
  "ISZERO ", 
  "PUSH2 0x02a1 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DIV ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MOD ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "BYTE ", 
  "PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000 ", 
  "MUL ", 
  "SWAP1 ", 
  "POP ", 
  "DUP1 ", 
  "POP ", 
  "MUL ", 
  "SWAP1 ", 
  "POP ", 
  "DUP1 ", 
  "SWAP1 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "AND ", 
  "ISZERO ", 
  "PUSH2 0x0316 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DIV ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MOD ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "BYTE ", 
  "PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000 ", 
  "MUL ", 
  "SWAP1 ", 
  "POP ", 
  "DUP1 ", 
  "POP ", 
  "POP ", 
  "SWAP1 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "AND ", 
  "ISZERO ", 
  "PUSH2 0x038b ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DIV ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MOD ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "BYTE ", 
  "PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000 ", 
  "MUL ", 
  "SWAP1 ", 
  "POP ", 
  "DUP1 ", 
  "POP ", 
  "SWAP1 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "AND ", 
  "ISZERO ", 
  "PUSH2 0x0400 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DIV ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MOD "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [Id_3, Concat(0,\n       ~(~Extract(255,\n                  1,\n                  115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                  256*\n                  If(Extract(0, 0, Ia_store_6) == 0, 1, 0)) |\n         ~Extract(255, 1, Ia_store_6)))]\nOutput: [Id_3 +\nConcat(0,\n       ~(~Extract(255,\n                  1,\n                  115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n                  256*\n                  If(Extract(0, 0, Ia_store_6) == 0, 1, 0)) |\n         ~Extract(255, 1, Ia_store_6)))]", 
 "money_concurrency": false, 
 "truncation": false
}