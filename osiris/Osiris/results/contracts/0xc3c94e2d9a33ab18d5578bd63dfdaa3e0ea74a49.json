{
 "execution_paths": "86", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": "\nOpcode: DIV\nInput: [Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)), some_var_5]\nOutput: [bvudiv_i(Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)),\n         some_var_5)]", 
 "execution_time": "92.5759670734", 
 "signedness": false, 
 "evm_code_coverage": "86.7", 
 "underflow": "\nOpcode: SUB\nInput: [Iv +\nIa_store_976292505869117087192917925327000492395383345078802666268307517891126277410, 5000000000000000*some_var_4]\nOutput: [Iv +\nIa_store_976292505869117087192917925327000492395383345078802666268307517891126277410 +\n115792089237316195423570985008687907853269984665640564039457579007913129639936*\nsome_var_4]", 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x08 ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "DUP4 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH4 0xffffffff ", 
  "NOT ", 
  "DUP2 ", 
  "AND ", 
  "PUSH2 0xffff ", 
  "SWAP8 ", 
  "SWAP1 ", 
  "SWAP8 ", 
  "AND ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "PUSH4 0xffffffff ", 
  "SWAP2 ", 
  "DUP3 ", 
  "AND ", 
  "ADD ", 
  "AND ", 
  "SWAP6 ", 
  "SWAP1 ", 
  "SWAP6 ", 
  "OR ", 
  "SWAP1 ", 
  "SWAP5 ", 
  "SSTORE ", 
  "PUSH1 0x04 ", 
  "SWAP1 ", 
  "MSTORE ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "PUSH1 0x08 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DIV ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MOD ", 
  "PUSH1 0x04 ", 
  "MUL ", 
  "DUP7 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH1 0x10 ", 
  "DUP10 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH4 0xffffffff ", 
  "STOP ", 
  "AND ", 
  "SWAP1 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "DUP2 ", 
  "SLOAD ", 
  "DUP2 ", 
  "PUSH4 0xffffffff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "DUP4 ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "POP ", 
  "DUP4 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0ae6 ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x05 ", 
  "PUSH1 0x20 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "DUP5 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH2 0x0bad ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "SLOAD ", 
  "DUP4 ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0af3 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "DUP1 ", 
  "DUP3 ", 
  "SUB ", 
  "PUSH1 0x02 ", 
  "DUP2 ", 
  "PUSH4 0xffffffff ", 
  "PUSH1 0x00 ", 
  "NOT ", 
  "DUP8 ", 
  "ADD ", 
  "PUSH2 0xffff ", 
  "SWAP1 ", 
  "DUP2 ", 
  "AND ", 
  "SWAP1 ", 
  "DUP10 ", 
  "AND ", 
  "PUSH3 0x010000 ", 
  "MUL ", 
  "OR ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x02 ", 
  "PUSH1 0x20 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "DUP5 ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP5 ", 
  "MSTORE ", 
  "PUSH1 0x05 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP4 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "DIV ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "DUP2 ", 
  "PUSH4 0xffffffff ", 
  "PUSH1 0x00 ", 
  "NOT ", 
  "DUP8 ", 
  "ADD ", 
  "PUSH2 0xffff ", 
  "SWAP1 ", 
  "DUP2 ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "DUP11 ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "PUSH3 0x010000 ", 
  "MUL ", 
  "OR ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x02 ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "DUP4 ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "SWAP1 ", 
  "DUP2 ", 
  "AND ", 
  "DUP5 ", 
  "MSTORE ", 
  "PUSH1 0x05 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "MSTORE ", 
  "DUP1 ", 
  "DUP4 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP7 ", 
  "SWAP1 ", 
  "SWAP6 ", 
  "DIV ", 
  "SWAP1 ", 
  "SWAP6 ", 
  "ADD ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "SSTORE ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "CALLER ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x05 ", 
  "PUSH1 0x20 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ", 
  "SWAP1 ", 
  "LT ", 
  "PUSH2 0x0bf2 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "CALLER ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "PUSH1 0x00 "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [5000000000000000, some_var_1]\nOutput: [5000000000000000*some_var_1]", 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [4294967295, bvudiv_i(Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)),\n         some_var_5)]\nOutput: [Concat(0,\n       Extract(31,\n               0,\n               bvudiv_i(Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)),\n                        some_var_5)))]\nOpcode: AND\nInput: [Id_3, 65535]\nOutput: [Concat(0, Extract(15, 0, Id_3))]"
}