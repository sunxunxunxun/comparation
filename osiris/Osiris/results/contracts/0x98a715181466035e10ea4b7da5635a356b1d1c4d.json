{
 "execution_paths": "84", 
 "callstack": true, 
 "reentrancy": true, 
 "modulo": false, 
 "division": false, 
 "execution_time": "1621.27240992", 
 "signedness": false, 
 "evm_code_coverage": "91.9", 
 "underflow": "\nOpcode: SUB\nInput: [Concat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(239, 232, Id_4), 0) >> 232))), 48]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639888 +\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(239, 232, Id_4), 0) >> 232)))]", 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP3 ", 
  "DUP2 ", 
  "SUB ", 
  "DUP3 ", 
  "MSTORE ", 
  "DUP4 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP1 ", 
  "DUP4 ", 
  "DUP4 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "DUP5 ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "DIV ", 
  "PUSH1 0x0f ", 
  "MUL ", 
  "PUSH1 0x03 ", 
  "ADD ", 
  "CALL ", 
  "POP ", 
  "SWAP1 ", 
  "POP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x1f ", 
  "AND ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x09de ", 
  "JUMPI ", 
  "DUP1 ", 
  "DUP3 ", 
  "SUB ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "DUP4 ", 
  "PUSH1 0x20 ", 
  "SUB ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SUB ", 
  "NOT ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP3 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0xff ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "DUP5 ", 
  "DUP2 ", 
  "SUB ", 
  "DUP5 ", 
  "MSTORE ", 
  "DUP8 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP1 ", 
  "DUP4 ", 
  "DUP4 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "DUP5 ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "DIV ", 
  "PUSH1 0x0f ", 
  "MUL ", 
  "PUSH1 0x03 ", 
  "ADD ", 
  "CALL ", 
  "POP ", 
  "SWAP1 ", 
  "POP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x1f ", 
  "AND ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0a6b ", 
  "JUMPI ", 
  "DUP1 ", 
  "DUP3 ", 
  "SUB ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "DUP4 ", 
  "PUSH1 0x20 ", 
  "SUB ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SUB ", 
  "NOT ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "DUP5 ", 
  "DUP2 ", 
  "SUB ", 
  "DUP4 ", 
  "MSTORE ", 
  "DUP7 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP1 ", 
  "DUP4 ", 
  "DUP4 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "DUP5 ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "DIV ", 
  "PUSH1 0x0f ", 
  "MUL ", 
  "PUSH1 0x03 ", 
  "ADD ", 
  "CALL ", 
  "POP ", 
  "SWAP1 ", 
  "POP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x1f ", 
  "AND ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0ac4 ", 
  "JUMPI ", 
  "DUP1 ", 
  "DUP3 ", 
  "SUB ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "DUP4 ", 
  "PUSH1 0x20 ", 
  "SUB ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SUB ", 
  "NOT ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "DUP5 ", 
  "DUP2 ", 
  "SUB ", 
  "DUP3 ", 
  "MSTORE ", 
  "DUP6 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP1 ", 
  "DUP4 ", 
  "DUP4 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "DUP5 ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "DIV ", 
  "PUSH1 0x0f ", 
  "MUL ", 
  "PUSH1 0x03 ", 
  "ADD ", 
  "CALL ", 
  "POP ", 
  "SWAP1 ", 
  "POP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x1f ", 
  "AND ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0b1d ", 
  "JUMPI ", 
  "DUP1 ", 
  "DUP3 ", 
  "SUB ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "DUP4 ", 
  "PUSH1 0x20 ", 
  "SUB ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SUB ", 
  "NOT ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP7 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [115792089237316195423570985008687907853269984665640564039457584007913129639888L, Concat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(231, 224, Id_4), 0) >> 224)))]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639888 +\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(231, 224, Id_4), 0) >> 224)))]\nOpcode: MUL\nInput: [10, 115792089237316195423570985008687907853269984665640564039457584007913129639888 +\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(239, 232, Id_4), 0) >> 232)))]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639456 +\n10*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(239, 232, Id_4), 0) >> 232)))]\nOpcode: ADD\nInput: [115792089237316195423570985008687907853269984665640564039457584007913129639456 +\n10*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(239, 232, Id_4), 0) >> 232))), 115792089237316195423570985008687907853269984665640564039457584007913129639888 +\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(231, 224, Id_4), 0) >> 224)))]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639408 +\n10*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(239, 232, Id_4), 0) >> 232))) +\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               (Concat(0, Extract(231, 224, Id_4), 0) >> 224)))]", 
 "money_concurrency": false, 
 "truncation": false
}