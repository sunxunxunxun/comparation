{
 "execution_paths": "52", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "1800.54299617", 
 "signedness": false, 
 "evm_code_coverage": "74.4", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": true, 
 "dead_code": [
  "JUMP ", 
  "DUP1 ", 
  "PUSH4 0xd39cce1c ", 
  "EQ ", 
  "PUSH2 0x0234 ", 
  "JUMPI ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0948 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x0955 ", 
  "DUP4 ", 
  "DUP11 ", 
  "PUSH2 0x0b47 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP5 ", 
  "POP ", 
  "PUSH2 0x09aa ", 
  "JUMP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "PUSH2 0x097e ", 
  "DUP11 ", 
  "DUP5 ", 
  "PUSH2 0x0afe ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0987 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x0994 ", 
  "DUP4 ", 
  "DUP11 ", 
  "PUSH2 0x0b47 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH2 0x09a7 ", 
  "DUP2 ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "DUP12 ", 
  "JUMPDEST ", 
  "DIV ", 
  "PUSH2 0x0b47 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP5 ", 
  "POP ", 
  "POP ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP1 ", 
  "DUP1 ", 
  "DUP1 ", 
  "DUP1 ", 
  "DUP10 ", 
  "ISZERO ", 
  "DUP1 ", 
  "ISZERO ", 
  "SWAP1 ", 
  "PUSH2 0x09ed ", 
  "JUMPI ", 
  "POP ", 
  "DUP9 ", 
  "ISZERO ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x09fd ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "DUP9 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "GT ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "ISZERO ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "AND ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0a1a ", 
  "JUMPI ", 
  "POP ", 
  "ASSERTFAIL ", 
  "DUP8 ", 
  "GT ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0a26 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "SWAP6 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "CALLVALUE ", 
  "ISZERO ", 
  "PUSH2 0x023c ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "PUSH2 0x0092 ", 
  "JUMP ", 
  "PUSH1 0x04 ", 
  "SWAP5 ", 
  "CALLDATALOAD ", 
  "PUSH1 0x24 ", 
  "PUSH2 0xffff ", 
  "CALLDATALOAD ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH1 0x64 ", 
  "PUSH1 0x44 ", 
  "EQ ", 
  "CALLDATALOAD ", 
  "AND ", 
  "PUSH1 0x64 ", 
  "CALLDATALOAD ", 
  "PUSH2 0x09d8 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "SWAP3 ", 
  "POP ", 
  "DUP10 ", 
  "PUSH2 0x0a72 ", 
  "DUP6 ", 
  "DUP6 ", 
  "PUSH2 0x0b47 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0a7b ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0af1 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP10 ", 
  "DUP8 ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0a93 ", 
  "JUMPI ", 
  "DUP9 ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0af1 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH2 0x0aa4 ", 
  "DUP11 ", 
  "DUP7 ", 
  "PUSH1 0x64 ", 
  "DUP12 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH2 0x0324 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH2 0x0ab0 ", 
  "DUP10 ", 
  "DUP4 ", 
  "PUSH2 0x0afe ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP4 ", 
  "POP ", 
  "PUSH2 0x0ac0 ", 
  "DUP10 ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "PUSH2 0x0afe ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "POP ", 
  "DUP2 ", 
  "PUSH2 0x0acd ", 
  "DUP6 ", 
  "DUP6 ", 
  "PUSH2 0x0b47 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0ad6 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH2 0x0aee ", 
  "DUP2 ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x02 ", 
  "SWAP2 ", 
  "EXP ", 
  "DUP12 ", 
  "PUSH2 0x09a1 ", 
  "DUP3 ", 
  "JUMPDEST ", 
  "DIV ", 
  "PUSH2 0x0b47 ", 
  "MSTORE ", 
  "JUMPDEST ", 
  "SWAP6 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "MLOAD ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "SWAP5 ", 
  "SWAP4 ", 
  "SWAP1 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "DUP2 ", 
  "SWAP1 ", 
  "JUMPDEST ", 
  "PUSH1 0x38 ", 
  "SUB ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "PUSH7 0xb17217f7d1cf78 ", 
  "PUSH1 0x20 ", 
  "DUP3 ", 
  "MUL ", 
  "DIV ", 
  "SWAP3 ", 
  "POP ", 
  "SWAP1 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "POP ", 
  "JUMP ", 
  "RETURN ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH2 0x035d ", 
  "DUP4 ", 
  "PUSH4 0xffffffff ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "AND ", 
  "PUSH2 0x034e ", 
  "JUMPDEST ", 
  "POP ", 
  "DUP4 ", 
  "DUP8 ", 
  "PUSH4 0xffffffff ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "AND ", 
  "PUSH2 0x0afe ", 
  "DUP4 ", 
  "LT ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0357 ", 
  "JUMPDEST ", 
  "POP ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "PUSH2 0x09b6 ", 
  "SWAP2 ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP5 ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "SWAP2 ", 
  "POP ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "POP ", 
  "DUP2 ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "ISZERO ", 
  "PUSH2 0x0b53 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "PUSH2 0x0a0e ", 
  "DUP3 ", 
  "SUB ", 
  "JUMPDEST ", 
  "JUMPI ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH1 0x64 ", 
  "POP ", 
  "DUP9 ", 
  "JUMP ", 
  "PUSH2 0xffff ", 
  "STOP ", 
  "GT ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "DUP10 ", 
  "PUSH1 0x00 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "DUP7 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0a36 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "PUSH2 0x0af1 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH2 0x0a40 ", 
  "DUP11 ", 
  "DUP9 ", 
  "PUSH2 0x0b47 ", 
  "JUMPDEST ", 
  "POP ", 
  "DUP8 ", 
  "ISZERO ", 
  "PUSH2 0x0a83 ", 
  "JUMPI ", 
  "PUSH2 0x0a59 ", 
  "DUP10 ", 
  "DUP12 ", 
  "PUSH2 0x0afe ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP4 ", 
  "POP ", 
  "PUSH2 0x0a65 ", 
  "DUP10 ", 
  "ASSERTFAIL ", 
  "DUP7 ", 
  "PUSH2 0x0afe ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "DUP1 "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [1268015216581639993726699647899908618321920000000L, 295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10))]\nOutput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10))]\nOpcode: ADD\nInput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)), 147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10))))]\nOutput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)) +\n147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10))))]\nOpcode: MUL\nInput: [4294967296L, Id_10]\nOutput: [4294967296*Id_10]\nOpcode: ADD\nInput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)) +\n147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10)))), 49205466506600689740769267080763539456*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0,\n                      Extract(255,\n                              32,\n                              Id_10*\n                              Concat(0,\n                                     Extract(255,\n                                        32,\n                                        4294967296*Id_10))))))]\nOutput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)) +\n147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10)))) +\n49205466506600689740769267080763539456*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0,\n                      Extract(255,\n                              32,\n                              Id_10*\n                              Concat(0,\n                                     Extract(255,\n                                        32,\n                                        4294967296*Id_10))))))]\nOpcode: MUL\nInput: [Concat(0, Extract(255, 32, 4294967296*Id_10)), Id_10]\nOutput: [Id_10*Concat(0, Extract(255, 32, 4294967296*Id_10))]\nOpcode: MUL\nInput: [295232799039604157334081533963162091520L, Concat(0, Extract(255, 32, 4294967296*Id_10))]\nOutput: [295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10))]", 
 "money_concurrency": false, 
 "truncation": false
}