{
 "execution_paths": "301", 
 "callstack": true, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "87.2633290291", 
 "signedness": false, 
 "evm_code_coverage": "83.7", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "POP ", 
  "PUSH1 0x0b ", 
  "SLOAD ", 
  "JUMPDEST ", 
  "PUSH1 0x04 ", 
  "SLOAD ", 
  "PUSH9 0x056bc75e2d63100000 ", 
  "SWAP1 ", 
  "DUP3 ", 
  "MUL ", 
  "DIV ", 
  "PUSH1 0x12 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH1 0x10 ", 
  "DUP1 ", 
  "SLOAD ", 
  "DUP3 ", 
  "SWAP1 ", 
  "SUB ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "GT ", 
  "ISZERO ", 
  "PUSH2 0x10fc ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "SLOAD ", 
  "PUSH1 0x12 ", 
  "SLOAD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH5 0x0100000000 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "DIV ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "SWAP2 ", 
  "PUSH2 0x08fc ", 
  "DUP3 ", 
  "ISZERO ", 
  "MUL ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "DUP2 ", 
  "DUP2 ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "PUSH1 0x13 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH1 0xff ", 
  "NOT ", 
  "AND ", 
  "SWAP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMPDEST ", 
  "JUMP ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH32 0x1d652a5c62ad36f85560f53ee1f99956e0f1936aa06ae1025ae81969638821c9 ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "LOG1 ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "PUSH1 0x13 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH1 0xa8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "PUSH1 0xff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "SSTORE ", 
  "JUMPDEST ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "MSTORE ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SUB ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPDEST ", 
  "PUSH2 0x0000 ", 
  "JUMP "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [Ia_store_9, Concat(0,\n       Extract(31,\n               0,\n               bvudiv_i(Concat(0,\n                               (Extract(95,\n                                        64,\n                                        79228162514264337593543950336*\n                                        Concat(0,\n                                        Extract(31,\n                                        0,\n                                        Id_30))) |\n                                Extract(95, 64, Ia_store_8)) +\n                               4294967295*\n                               (Extract(63,\n                                        32,\n                                        79228162514264337593543950336*\n                                        Concat(0,\n                                        Extract(31,\n                                        0,\n                                        Id_30))) |\n                                Extract(63, 32, Ia_store_8))),\n                        Concat(0,\n                               Extract(31, 0, Ia_store_10)))))]\nOutput: [Ia_store_9*\nConcat(0,\n       Extract(31,\n               0,\n               bvudiv_i(Concat(0,\n                               (Extract(95,\n                                        64,\n                                        79228162514264337593543950336*\n                                        Concat(0,\n                                        Extract(31,\n                                        0,\n                                        Id_30))) |\n                                Extract(95, 64, Ia_store_8)) +\n                               4294967295*\n                               (Extract(63,\n                                        32,\n                                        79228162514264337593543950336*\n                                        Concat(0,\n                                        Extract(31,\n                                        0,\n                                        Id_30))) |\n                                Extract(63, 32, Ia_store_8))),\n                        Concat(0,\n                               Extract(31, 0, Ia_store_10)))))]", 
 "money_concurrency": true, 
 "truncation": "\nOpcode: AND\nInput: [4294967295, Concat(0,\n       Extract(255,\n               32,\n               79228162514264337593543950336*\n               Concat(0, Extract(31, 0, Id_30))) |\n       Concat(Extract(255, 128, Ia_store_8),\n              0,\n              Extract(95, 32, Ia_store_8)))]\nOutput: [Concat(0,\n       Extract(63,\n               32,\n               79228162514264337593543950336*\n               Concat(0, Extract(31, 0, Id_30))) |\n       Extract(63, 32, Ia_store_8))]\nOpcode: AND\nInput: [4294967295, Concat(0,\n       Extract(255,\n               64,\n               79228162514264337593543950336*\n               Concat(0, Extract(31, 0, Id_30))) |\n       Concat(Extract(255, 128, Ia_store_8),\n              0,\n              Extract(95, 64, Ia_store_8)))]\nOutput: [Concat(0,\n       Extract(95,\n               64,\n               79228162514264337593543950336*\n               Concat(0, Extract(31, 0, Id_30))) |\n       Extract(95, 64, Ia_store_8))]\nOpcode: AND\nInput: [Concat(0,\n       Extract(255,\n               96,\n               79228162514264337593543950336*\n               Concat(0, Extract(31, 0, Id_30))) |\n       Concat(Extract(255, 128, Ia_store_8), 0)), 4294967295]\nOutput: [Concat(0,\n       Extract(127,\n               96,\n               79228162514264337593543950336*\n               Concat(0, Extract(31, 0, Id_30))))]"
}