{
 "execution_paths": "140", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "194.753070116", 
 "signedness": false, 
 "evm_code_coverage": "88.9", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "PUSH9 0x056bc75e2d63100000 ", 
  "MUL ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "ADD ", 
  "PUSH9 0x010000000000000000 ", 
  "DUP6 ", 
  "DIV ", 
  "DUP3 ", 
  "AND ", 
  "PUSH8 0x8ac7230489e80000 ", 
  "MUL ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP5 ", 
  "AND ", 
  "PUSH8 0x0de0b6b3a7640000 ", 
  "MUL ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "DUP2 ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x00 ", 
  "DUP10 ", 
  "DUP5 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x10b5 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "SWAP3 ", 
  "DUP3 ", 
  "ADD ", 
  "SWAP3 ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "PUSH2 0x1025 ", 
  "JUMP ", 
  "STOP ", 
  "INVALID 0xdd ", 
  "CALLCODE ", 
  "INVALID 0xad ", 
  "INVALID 0xe2 ", 
  "INVALID 0xc8 ", 
  "PUSH10 0xc2b068fc378daa952ba7 ", 
  "CALL ", 
  "PUSH4 0xc4a11628 ", 
  "GAS ", 
  "INVALID 0x23 ", 
  "INVALID 0xb3 ", 
  "INVALID 0xef ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "CALLER ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP2 ", 
  "SHA3 ", 
  "DUP5 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "JUMPDEST ", 
  "DUP8 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0ce4 ", 
  "JUMPI ", 
  "DUP8 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x0c47 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "DUP2 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "DUP4 ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH1 0x07 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "MSTORE ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SHA3 ", 
  "SLOAD ", 
  "SWAP2 ", 
  "SWAP5 ", 
  "POP ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH1 0xff ", 
  "AND ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0c89 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "DUP8 ", 
  "GT ", 
  "ISZERO ", 
  "PUSH2 0x0c96 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "DUP1 ", 
  "DUP5 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "DUP11 ", 
  "DUP7 ", 
  "SUB ", 
  "SWAP1 ", 
  "SSTORE ", 
  "CALLER ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "SWAP2 ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x20 ", 
  "PUSH2 0x15da ", 
  "DUP4 ", 
  "CODECOPY ", 
  "DUP2 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "MSTORE ", 
  "SWAP1 ", 
  "DUP11 ", 
  "SWAP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "LOG3 ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "PUSH2 0x0c32 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x01 ", 
  "SWAP8 ", 
  "SWAP7 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "CALLER ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP2 ", 
  "SHA3 ", 
  "DUP6 ", 
  "DUP8 ", 
  "SUB ", 
  "SWAP1 ", 
  "SSTORE ", 
  "JUMPDEST ", 
  "DUP9 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0e16 ", 
  "JUMPI ", 
  "DUP9 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "PUSH2 0x0d90 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "DUP2 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "SWAP5 ", 
  "POP ", 
  "SWAP3 ", 
  "POP ", 
  "DUP8 ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "DUP2 ", 
  "DUP4 ", 
  "GT ", 
  "ISZERO ", 
  "PUSH2 0x0dca ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "DUP1 ", 
  "DUP6 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x04 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "INVALID 0x1b ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP12 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "DUP6 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "CALLER ", 
  "AND ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "MLOAD ", 
  "PUSH1 0x20 ", 
  "INVALID 0xf5 ", 
  "PUSH2 0x15da ", 
  "INVALID 0x4d ", 
  "INVALID 0xf5 ", 
  "DUP4 ", 
  "CODECOPY ", 
  "DUP2 ", 
  "MLOAD ", 
  "SWAP2 ", 
  "MSTORE ", 
  "SWAP1 ", 
  "DUP12 ", 
  "SWAP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "LOG3 ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "PUSH2 0x0d7b ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x01 ", 
  "SWAP9 ", 
  "SWAP8 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [Ia_store_1, Concat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1))]\nOutput: [Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1))]\nOpcode: ADD\nInput: [Concat(0, Extract(255, 128, Ia_store_1)), Concat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1))]\nOutput: [Concat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1))]\nOpcode: ADD\nInput: [Id_8, Ia_store_3]\nOutput: [Id_8 + Ia_store_3]\nOpcode: MUL\nInput: [Id_15, Id_16]\nOutput: [Id_15*Id_16]\nOpcode: ADD\nInput: [Concat(0, Extract(63, 0, Id_27)), Concat(0, Extract(255, 192, Ia_store_1))]\nOutput: [Concat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1))]", 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [18446744073709551615L, Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1))]\nOutput: [Concat(0,\n       Extract(63, 0, Ia_store_1) +\n       Extract(127, 64, Ia_store_1) +\n       Extract(191, 128, Ia_store_1) +\n       Extract(63, 0, Id_27) +\n       Extract(255, 192, Ia_store_1))]\nOpcode: AND\nInput: [18446744073709551615L, Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1))]\nOutput: [Concat(0,\n       Extract(63, 0, Ia_store_1) +\n       Extract(127, 64, Ia_store_1) +\n       Extract(191, 128, Ia_store_1) +\n       Extract(63, 0, Id_27) +\n       Extract(255, 192, Ia_store_1))]\nOpcode: AND\nInput: [18446744073709551615L, Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1)) +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nbvudiv_i(Concat(0,\n                Extract(63, 0, Ia_store_1) +\n                Extract(127, 64, Ia_store_1) +\n                Extract(191, 128, Ia_store_1) +\n                Extract(63, 0, Id_27) +\n                Extract(255, 192, Ia_store_1) +\n                18446744073709551615*\n                Extract(63,\n                        0,\n                        bvurem_i(Concat(0,\n                                        Extract(63,\n                                        0,\n                                        Ia_store_1) +\n                                        Extract(127,\n                                        64,\n                                        Ia_store_1) +\n                                        Extract(191,\n                                        128,\n                                        Ia_store_1) +\n                                        Extract(63,\n                                        0,\n                                        Id_27) +\n                                        Extract(255,\n                                        192,\n                                        Ia_store_1)),\n                                 10))),\n         10)]\nOutput: [Concat(0,\n       Extract(63, 0, Ia_store_1) +\n       Extract(127, 64, Ia_store_1) +\n       Extract(191, 128, Ia_store_1) +\n       Extract(63, 0, Id_27) +\n       Extract(255, 192, Ia_store_1) +\n       18446744073709551615*\n       Extract(63,\n               0,\n               bvudiv_i(Concat(0,\n                               Extract(63, 0, Ia_store_1) +\n                               Extract(127, 64, Ia_store_1) +\n                               Extract(191, 128, Ia_store_1) +\n                               Extract(63, 0, Id_27) +\n                               Extract(255, 192, Ia_store_1) +\n                               18446744073709551615*\n                               Extract(63,\n                                       0,\n                                       bvurem_i(Concat(0,\n                                        Extract(63,\n                                        0,\n                                        Ia_store_1) +\n                                        Extract(127,\n                                        64,\n                                        Ia_store_1) +\n                                        Extract(191,\n                                        128,\n                                        Ia_store_1) +\n                                        Extract(63,\n                                        0,\n                                        Id_27) +\n                                        Extract(255,\n                                        192,\n                                        Ia_store_1)),\n                                        10))),\n                        10)))]\nOpcode: AND\nInput: [Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1)) +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nbvurem_i(Concat(0,\n                Extract(63, 0, Ia_store_1) +\n                Extract(127, 64, Ia_store_1) +\n                Extract(191, 128, Ia_store_1) +\n                Extract(63, 0, Id_27) +\n                Extract(255, 192, Ia_store_1)),\n         10), 18446744073709551615L]\nOutput: [Concat(0,\n       Extract(63, 0, Ia_store_1) +\n       Extract(127, 64, Ia_store_1) +\n       Extract(191, 128, Ia_store_1) +\n       Extract(63, 0, Id_27) +\n       Extract(255, 192, Ia_store_1) +\n       18446744073709551615*\n       Extract(63,\n               0,\n               bvurem_i(Concat(0,\n                               Extract(63, 0, Ia_store_1) +\n                               Extract(127, 64, Ia_store_1) +\n                               Extract(191, 128, Ia_store_1) +\n                               Extract(63, 0, Id_27) +\n                               Extract(255, 192, Ia_store_1)),\n                        10)))]\nOpcode: AND\nInput: [Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1)) +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nbvurem_i(Concat(0,\n                Extract(63, 0, Ia_store_1) +\n                Extract(127, 64, Ia_store_1) +\n                Extract(191, 128, Ia_store_1) +\n                Extract(63, 0, Id_27) +\n                Extract(255, 192, Ia_store_1)),\n         1000), 18446744073709551615L]\nOutput: [Concat(0,\n       Extract(63, 0, Ia_store_1) +\n       Extract(127, 64, Ia_store_1) +\n       Extract(191, 128, Ia_store_1) +\n       Extract(63, 0, Id_27) +\n       Extract(255, 192, Ia_store_1) +\n       18446744073709551615*\n       Extract(63,\n               0,\n               bvurem_i(Concat(0,\n                               Extract(63, 0, Ia_store_1) +\n                               Extract(127, 64, Ia_store_1) +\n                               Extract(191, 128, Ia_store_1) +\n                               Extract(63, 0, Id_27) +\n                               Extract(255, 192, Ia_store_1)),\n                        1000)))]\nOpcode: AND\nInput: [Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1)), 18446744073709551615L]\nOutput: [Concat(0,\n       Extract(63, 0, Ia_store_1) +\n       Extract(127, 64, Ia_store_1) +\n       Extract(191, 128, Ia_store_1) +\n       Extract(63, 0, Id_27) +\n       Extract(255, 192, Ia_store_1))]\nOpcode: AND\nInput: [Ia_store_1 +\nConcat(0, Extract(255, 64, Ia_store_1)) +\nConcat(0, Extract(255, 128, Ia_store_1)) +\nConcat(0, Extract(63, 0, Id_27)) +\nConcat(0, Extract(255, 192, Ia_store_1)) +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nbvurem_i(Concat(0,\n                Extract(63, 0, Ia_store_1) +\n                Extract(127, 64, Ia_store_1) +\n                Extract(191, 128, Ia_store_1) +\n                Extract(63, 0, Id_27) +\n                Extract(255, 192, Ia_store_1)),\n         10000), 18446744073709551615L]\nOutput: [Concat(0,\n       Extract(63, 0, Ia_store_1) +\n       Extract(127, 64, Ia_store_1) +\n       Extract(191, 128, Ia_store_1) +\n       Extract(63, 0, Id_27) +\n       Extract(255, 192, Ia_store_1) +\n       18446744073709551615*\n       Extract(63,\n               0,\n               bvurem_i(Concat(0,\n                               Extract(63, 0, Ia_store_1) +\n                               Extract(127, 64, Ia_store_1) +\n                               Extract(191, 128, Ia_store_1) +\n                               Extract(63, 0, Id_27) +\n                               Extract(255, 192, Ia_store_1)),\n                        10000)))]"
}