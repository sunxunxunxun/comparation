{
 "execution_paths": "62", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "1810.61585402", 
 "signedness": false, 
 "evm_code_coverage": "76.2", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": true, 
 "dead_code": [
  "ISZERO ", 
  "PUSH2 0x0c8b ", 
  "PUSH2 0x0c52 ", 
  "DUP1 ", 
  "PUSH4 0xd39cce1c ", 
  "EQ ", 
  "PUSH2 0x02ed ", 
  "JUMPI ", 
  "JUMPDEST ", 
  "DIV ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP3 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "DIV ", 
  "DUP1 ", 
  "DUP3 ", 
  "DUP2 ", 
  "DUP2 ", 
  "ISZERO ", 
  "PUSH2 0x0c41 ", 
  "JUMPDEST ", 
  "ADD ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP3 ", 
  "DUP2 ", 
  "SWAP2 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "DUP9 ", 
  "JUMP ", 
  "SWAP5 ", 
  "POP ", 
  "PUSH2 0x0b4b ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP3 ", 
  "RETURN ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "DUP11 ", 
  "PUSH1 0x64 ", 
  "DUP12 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH2 0x0452 ", 
  "JUMP ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "DUP1 ", 
  "CALLDATALOAD ", 
  "PUSH1 0x20 ", 
  "POP ", 
  "EXP ", 
  "PUSH2 0x0c75 ", 
  "MUL ", 
  "PUSH2 0x0b16 ", 
  "PUSH2 0xffff ", 
  "PUSH1 0xff ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "ADD ", 
  "PUSH1 0x02 ", 
  "ISZERO ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MUL ", 
  "PUSH2 0x0caa ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ASSERTFAIL ", 
  "ADD ", 
  "SWAP1 ", 
  "POP ", 
  "SWAP2 ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0ad9 ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "JUMPDEST ", 
  "MLOAD ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x0ae6 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "DUP4 ", 
  "DUP11 ", 
  "PUSH2 0x0cff ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "JUMPDEST ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "CALLVALUE ", 
  "ISZERO ", 
  "PUSH2 0x02f5 ", 
  "ASSERTFAIL ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "PUSH2 0x032a ", 
  "PUSH1 0x04 ", 
  "DUP1 ", 
  "DUP1 ", 
  "CALLDATALOAD ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "PUSH1 0xff ", 
  "SWAP1 ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "SWAP1 ", 
  "SWAP1 ", 
  "PUSH1 0x02 ", 
  "ADD ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "DUP1 ", 
  "CALLDATALOAD ", 
  "DUP11 ", 
  "DUP5 ", 
  "PUSH2 0x0caa ", 
  "AND ", 
  "SWAP1 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "SWAP1 ", 
  "ISZERO ", 
  "PUSH2 0x0b1f ", 
  "DUP1 ", 
  "CALLDATALOAD ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x0b2c ", 
  "POP ", 
  "POP ", 
  "DUP4 ", 
  "DUP11 ", 
  "PUSH2 0x0cff ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "JUMPDEST ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP3 ", 
  "DUP2 ", 
  "MSTORE ", 
  "DUP2 ", 
  "PUSH5 0x0100000000 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "DUP12 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "PUSH2 0x0cff ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP5 ", 
  "POP ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH11 0x01287626ee52197b000000 ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0b42 ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "DUP11 ", 
  "EQ ", 
  "ISZERO ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0b99 ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "DUP10 ", 
  "EQ ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0ba9 ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "DUP9 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "GT ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0bba ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x64 ", 
  "DUP9 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "GT ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0bc6 ", 
  "JUMPI ", 
  "POP ", 
  "DUP10 ", 
  "DUP8 ", 
  "GT ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0bd2 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "DUP8 ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0be4 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0c9d ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH2 0x0bee ", 
  "DUP11 ", 
  "DUP9 ", 
  "PUSH2 0x0cff ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP5 ", 
  "POP ", 
  "PUSH1 0x64 ", 
  "DUP9 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0c31 ", 
  "JUMPI ", 
  "PUSH2 0x0c07 ", 
  "DUP10 ", 
  "DUP12 ", 
  "PUSH2 0x0caa ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP4 ", 
  "POP ", 
  "PUSH2 0x0c13 ", 
  "DUP10 ", 
  "DUP7 ", 
  "PUSH2 0x0caa ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "POP ", 
  "DUP10 ", 
  "PUSH2 0x0c20 ", 
  "DUP6 ", 
  "DUP6 ", 
  "PUSH2 0x0cff ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0c29 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0c9d ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP10 ", 
  "DUP8 ", 
  "EQ ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH1 0x38 ", 
  "JUMPI ", 
  "PUSH7 0xb17217f7d1cf78 ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0c9d ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP3 ", 
  "MUL ", 
  "SWAP1 ", 
  "PUSH1 0x02 ", 
  "DUP7 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH2 0x0c5e ", 
  "DUP10 ", 
  "DUP4 ", 
  "PUSH2 0x0caa ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP4 ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH2 0x048b ", 
  "DUP10 ", 
  "PUSH1 0x20 ", 
  "DUP4 ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "AND ", 
  "PUSH2 0x047c ", 
  "EXP ", 
  "DUP4 ", 
  "DUP8 ", 
  "PUSH4 0xffffffff ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "AND ", 
  "PUSH2 0x0caa ", 
  "PUSH2 0x0c82 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0485 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "PUSH2 0x0b57 ", 
  "JUMPI ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "POP ", 
  "DUP2 ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP5 ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "SWAP6 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "SWAP5 ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "DUP2 ", 
  "DUP4 ", 
  "LT ", 
  "ISZERO ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0d0d ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DUP2 ", 
  "DUP4 ", 
  "SUB ", 
  "SWAP1 ", 
  "POP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "STOP ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "PUSH2 0x0b7b ", 
  "ASSERTFAIL ", 
  "DUP6 ", 
  "DUP6 ", 
  "PUSH2 0x0cff ", 
  "JUMP ", 
  "SWAP1 ", 
  "PUSH1 0x40 ", 
  "POP ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH2 0x0b48 ", 
  "ISZERO ", 
  "PUSH1 0x20 "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)) +\n147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10)))), 49205466506600689740769267080763539456*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0,\n                      Extract(255,\n                              32,\n                              Id_10*\n                              Concat(0,\n                                     Extract(255,\n                                        32,\n                                        4294967296*Id_10))))))]\nOutput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)) +\n147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10)))) +\n49205466506600689740769267080763539456*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0,\n                      Extract(255,\n                              32,\n                              Id_10*\n                              Concat(0,\n                                     Extract(255,\n                                        32,\n                                        4294967296*Id_10))))))]\nOpcode: MUL\nInput: [Concat(0, Extract(255, 32, 4294967296*Id_10)), 295232799039604157334081533963162091520L]\nOutput: [295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10))]\nOpcode: ADD\nInput: [1268015216581639993726699647899908618321920000000L, 295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10))]\nOutput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10))]\nOpcode: MUL\nInput: [4294967296L, Id_10]\nOutput: [4294967296*Id_10]\nOpcode: ADD\nInput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)), 147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10))))]\nOutput: [1268015216581639993726699647899908618321920000000 +\n295232799039604157334081533963162091520*\nConcat(0, Extract(255, 32, 4294967296*Id_10)) +\n147616399519802078667040766981581045760*\nConcat(0,\n       Extract(255,\n               32,\n               Id_10*\n               Concat(0, Extract(255, 32, 4294967296*Id_10))))]\nOpcode: MUL\nInput: [Concat(0, Extract(255, 32, 4294967296*Id_10)), Id_10]\nOutput: [Id_10*Concat(0, Extract(255, 32, 4294967296*Id_10))]", 
 "money_concurrency": false, 
 "truncation": false
}