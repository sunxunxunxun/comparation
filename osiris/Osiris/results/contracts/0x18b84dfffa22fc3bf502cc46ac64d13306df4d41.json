{
 "execution_paths": "9", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "3.36178016663", 
 "signedness": "\nOpcode: SIGNEXTEND\nInput: [0, Id_3]\nOutput: [Id_3]\nOpcode: GT\nInput: [Concat(0,\n       255 + 3*Extract(7, 0, Id_3) + 2*Extract(7, 0, Id_2)), 198]\nOutput: [If(ULE(255 + 3*Extract(7, 0, Id_3) + 2*Extract(7, 0, Id_2),\n       198),\n   0,\n   1)]\nOpcode: SIGNEXTEND\nInput: [0, Id_2]\nOutput: [Concat(0, Extract(6, 0, Id_2))]", 
 "evm_code_coverage": "87.2", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "POP ", 
  "PUSH1 0x00 ", 
  "DUP6 ", 
  "PUSH1 0x00 ", 
  "SIGNEXTEND ", 
  "SGT ", 
  "JUMPDEST ", 
  "PUSH1 0x02 ", 
  "DUP5 ", 
  "PUSH1 0x00 ", 
  "SIGNEXTEND ", 
  "SMOD ", 
  "PUSH1 0x00 ", 
  "SIGNEXTEND ", 
  "PUSH1 0x00 ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0175 ", 
  "JUMPI ", 
  "PUSH1 0xc6 ", 
  "PUSH1 0x02 ", 
  "DUP4 ", 
  "MUL ", 
  "PUSH1 0x03 ", 
  "DUP4 ", 
  "MUL ", 
  "ADD ", 
  "PUSH1 0xff ", 
  "AND ", 
  "GT ", 
  "PUSH2 0x0079 ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x0079 ", 
  "JUMP "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [Id_3, 115792089237316195423570985008687907853269984665640564039457584007913129639935L]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nId_3]\nOpcode: MUL\nInput: [3, 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nId_3]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639933 +\n3*Id_3]\nOpcode: ADD\nInput: [115792089237316195423570985008687907853269984665640564039457584007913129639933 +\n3*Id_3, 2 + 2*Id_2]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639935 +\n3*Id_3 +\n2*Id_2]\nOpcode: MUL\nInput: [Id_2, 2]\nOutput: [2*Id_2]\nOpcode: MUL\nInput: [Id_3, 3]\nOutput: [3*Id_3]\nOpcode: ADD\nInput: [3*Id_3, 2*Id_2]\nOutput: [3*Id_3 + 2*Id_2]\nOpcode: ADD\nInput: [Id_2, 1]\nOutput: [1 + Id_2]\nOpcode: MUL\nInput: [2, 1 + Id_2]\nOutput: [2 + 2*Id_2]", 
 "money_concurrency": false, 
 "truncation": false
}