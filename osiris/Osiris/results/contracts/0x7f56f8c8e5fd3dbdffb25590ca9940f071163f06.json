{
 "execution_paths": "15", 
 "callstack": true, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "4.79048109055", 
 "signedness": false, 
 "evm_code_coverage": "73.5", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "PUSH1 0x01 ", 
  "PUSH1 0x06 ", 
  "PUSH1 0x00 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "DUP2 ", 
  "SLOAD ", 
  "DUP2 ", 
  "PUSH1 0xff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "DUP4 ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH1 0x32 ", 
  "PUSH1 0x05 ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "SLOAD ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x046e ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x06 ", 
  "PUSH1 0x00 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "DUP2 ", 
  "SLOAD ", 
  "DUP2 ", 
  "PUSH1 0xff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "DUP4 ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "PUSH1 0x06 ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "EQ ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x048d ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x31 ", 
  "DUP8 ", 
  "GT ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x04a1 ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x5a ", 
  "PUSH1 0x07 ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "SLOAD ", 
  "ADD ", 
  "TIMESTAMP ", 
  "LT ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "PUSH2 0x04f8 ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "PUSH1 0x06 ", 
  "PUSH1 0x01 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "DUP2 ", 
  "SLOAD ", 
  "DUP2 ", 
  "PUSH1 0xff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "DUP4 ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "CALLER ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x01 ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "SLOAD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x06 ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "EQ ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x0517 ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x32 ", 
  "DUP8 ", 
  "LT ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "ISZERO ", 
  "PUSH2 0x052b ", 
  "JUMPI ", 
  "POP ", 
  "PUSH1 0x5a ", 
  "PUSH1 0x07 ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "SLOAD ", 
  "ADD ", 
  "TIMESTAMP ", 
  "LT ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "PUSH2 0x0582 ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "PUSH1 0x06 ", 
  "PUSH1 0x01 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "DUP2 ", 
  "SLOAD ", 
  "DUP2 ", 
  "PUSH1 0xff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "DUP4 ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "CALLER ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x01 ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "SLOAD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH1 0x05 ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "SLOAD ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0590 ", 
  "JUMP "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [1 + bvudiv_i(IH_blockhash, Ia_store_8), Id_2]\nOutput: [1 + bvudiv_i(IH_blockhash, Ia_store_8) + Id_2]\nOpcode: ADD\nInput: [1 + bvudiv_i(IH_blockhash, Ia_store_8) + Id_2, 1 + bvudiv_i(IH_blockhash, Ia_store_8)]\nOutput: [2 + 2*bvudiv_i(IH_blockhash, Ia_store_8) + Id_2]\nOpcode: ADD\nInput: [bvudiv_i(2 + 2*bvudiv_i(IH_blockhash, Ia_store_8) + Id_2,\n         Ia_store_8), 1]\nOutput: [1 +\nbvudiv_i(2 + 2*bvudiv_i(IH_blockhash, Ia_store_8) + Id_2,\n         Ia_store_8)]", 
 "money_concurrency": false, 
 "truncation": false
}