{
 "execution_paths": "139", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "25.182585001", 
 "signedness": false, 
 "evm_code_coverage": "92.1", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "DUP1 ", 
  "DUP3 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "JUMPDEST ", 
  "STOP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "ISZERO ", 
  "SWAP1 ", 
  "LOG3 ", 
  "PUSH1 0x01 ", 
  "SWAP1 ", 
  "POP ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "AND ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "STOP ", 
  "ADD ", 
  "SWAP1 ", 
  "JUMPDEST ", 
  "PUSH1 0x08 ", 
  "PUSH1 0x00 ", 
  "CALLER ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "ISZERO ", 
  "SUB ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP3 ", 
  "ISZERO ", 
  "ISZERO ", 
  "AND ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "PUSH2 0x08a1 ", 
  "DUP2 ", 
  "PUSH1 0x05 ", 
  "SLOAD ", 
  "PUSH2 0x17fd ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x05 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "PUSH1 0x07 ", 
  "PUSH1 0x01 ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "JUMPDEST ", 
  "PUSH1 0x08 ", 
  "PUSH1 0x00 ", 
  "CALLER ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "PUSH2 0x08fc ", 
  "CALLVALUE ", 
  "SWAP1 ", 
  "DUP2 ", 
  "ISZERO ", 
  "MUL ", 
  "SWAP1 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0909 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP2 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "POP ", 
  "JUMP ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "PUSH2 0x1369 ", 
  "DUP3 ", 
  "PUSH1 0x08 ", 
  "PUSH1 0x00 ", 
  "DUP7 ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "JUMPDEST ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH2 0x17fd ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x08 ", 
  "PUSH1 0x00 ", 
  "DUP6 ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "SWAP2 ", 
  "AND ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "JUMPDEST ", 
  "STOP ", 
  "POP ", 
  "AND ", 
  "AND ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "DUP2 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "DUP3 ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "CALLER ", 
  "PUSH20 0xffffffffffffffffffffffffffffffffffffffff ", 
  "PUSH1 0x20 ", 
  "AND ", 
  "PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "STOP ", 
  "DUP5 ", 
  "PUSH1 0x40 ", 
  "MLOAD "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [Id_11, 1000000000000000000L]\nOutput: [1000000000000000000*Id_11]\nOpcode: MUL\nInput: [Id_5, 1000000000000000000L]\nOutput: [1000000000000000000*Id_5]", 
 "money_concurrency": true, 
 "truncation": false
}