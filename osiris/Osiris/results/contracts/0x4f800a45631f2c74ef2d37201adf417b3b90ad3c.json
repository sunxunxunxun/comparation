{
 "execution_paths": "80", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "76.213037014", 
 "signedness": false, 
 "evm_code_coverage": "85.7", 
 "underflow": "\nOpcode: SUB\nInput: [balance_4, Id_9]\nOutput: [balance_4 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nId_9]", 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x0d ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "ISZERO ", 
  "PUSH2 0x08fc ", 
  "MUL ", 
  "DUP3 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0a93 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH2 0x05e9 ", 
  "CALLER ", 
  "DUP6 ", 
  "DUP6 ", 
  "PUSH2 0x0d4b ", 
  "JUMP ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x0d ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP3 ", 
  "ISZERO ", 
  "PUSH2 0x08fc ", 
  "MUL ", 
  "DUP4 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0c24 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH2 0x0c2f ", 
  "CALLER ", 
  "ADDRESS ", 
  "DUP7 ", 
  "PUSH2 0x0d4b ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH2 0x0c44 ", 
  "DUP2 ", 
  "ADDRESS ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "BALANCE ", 
  "SUB ", 
  "PUSH2 0x0e84 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "CALLER ", 
  "AND ", 
  "DUP4 ", 
  "ISZERO ", 
  "PUSH2 0x08fc ", 
  "MUL ", 
  "DUP5 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x05e9 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x0d ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP3 ", 
  "ISZERO ", 
  "PUSH2 0x08fc ", 
  "MUL ", 
  "DUP4 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x058b ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH2 0x0596 ", 
  "ADDRESS ", 
  "CALLER ", 
  "DUP7 ", 
  "PUSH2 0x0d4b ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH2 0x05ab ", 
  "DUP2 ", 
  "ADDRESS ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "BALANCE ", 
  "SUB ", 
  "PUSH2 0x0e84 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH2 0x05b6 ", 
  "DUP2 ", 
  "PUSH1 0x01 ", 
  "PUSH2 0x0e89 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "ISZERO ", 
  "PUSH2 0x08fc ", 
  "MUL ", 
  "DUP3 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x05e9 ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "STOP ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x0d ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "ISZERO ", 
  "PUSH2 0x08fc ", 
  "MUL ", 
  "DUP3 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SUB ", 
  "DUP2 ", 
  "DUP6 ", 
  "DUP9 ", 
  "DUP9 ", 
  "CALL ", 
  "SWAP4 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x077c ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "DUP1 ", 
  "DUP8 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x06 ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP1 ", 
  "DUP4 ", 
  "SHA3 ", 
  "CALLER ", 
  "SWAP1 ", 
  "SWAP5 ", 
  "AND ", 
  "DUP4 ", 
  "MSTORE ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "MSTORE ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "DUP6 ", 
  "SWAP1 ", 
  "SUB ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH2 0x07b4 ", 
  "DUP7 ", 
  "DUP7 ", 
  "DUP7 ", 
  "PUSH2 0x0d4b ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x01 ", 
  "SWAP6 ", 
  "SWAP5 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [Id_15, Ia_store_7]\nOutput: [Ia_store_7*Id_15]\nOpcode: MUL\nInput: [Ia_store_7*Id_15, 4]\nOutput: [4*Ia_store_7*Id_15]\nOpcode: MUL\nInput: [Id_21, Ia_store_7]\nOutput: [Ia_store_7*Id_21]\nOpcode: ADD\nInput: [Id_12, Ia_store_46516272907608195457721630318618856012212460726291353064753524705637130268346]\nOutput: [Id_12 +\nIa_store_46516272907608195457721630318618856012212460726291353064753524705637130268346]\nOpcode: ADD\nInput: [Id_9, Ia_store_12]\nOutput: [Id_9 + Ia_store_12]\nOpcode: ADD\nInput: [Id_12, Ia_store_4]\nOutput: [Id_12 + Ia_store_4]\nOpcode: ADD\nInput: [Ia_store_7*Id_21, bvudiv_i(4*Ia_store_7*Id_21, 1000)]\nOutput: [Ia_store_7*Id_21 + bvudiv_i(4*Ia_store_7*Id_21, 1000)]\nOpcode: MUL\nInput: [Ia_store_7*Id_21, 4]\nOutput: [4*Ia_store_7*Id_21]", 
 "money_concurrency": false, 
 "truncation": false
}