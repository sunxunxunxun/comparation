{
 "execution_paths": "12", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": "\nOpcode: DIV\nInput: [Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)), some_var_12]\nOutput: [bvudiv_i(Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)),\n         some_var_12)]", 
 "execution_time": "2.12989020348", 
 "signedness": false, 
 "evm_code_coverage": "57.3", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "SWAP1 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "DUP2 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH1 0xff ", 
  "NOT ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "OR ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SSTORE ", 
  "DUP2 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "ADD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SSTORE ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "DUP3 ", 
  "DUP1 ", 
  "ISZERO ", 
  "DUP3 ", 
  "SWAP1 ", 
  "GT ", 
  "PUSH2 0x0187 ", 
  "JUMPI ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP2 ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP4 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "ADD ", 
  "SWAP2 ", 
  "ADD ", 
  "PUSH2 0x0187 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "PUSH2 0x006b ", 
  "JUMP ", 
  "MOD ", 
  "PUSH1 0xff ", 
  "DUP2 ", 
  "DUP2 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "DUP6 ", 
  "SWAP1 ", 
  "MSTORE ", 
  "PUSH1 0x40 ", 
  "SWAP1 ", 
  "SHA3 ", 
  "SLOAD ", 
  "SWAP2 ", 
  "SWAP5 ", 
  "POP ", 
  "AND ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH1 0x01 ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x01f3 ", 
  "JUMPI ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "PUSH2 0x00f0 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "DUP3 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x00 ", 
  "POP ", 
  "DUP3 ", 
  "DUP2 ", 
  "SLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "DUP1 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "DUP1 ", 
  "DUP3 ", 
  "DIV ", 
  "PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563 ", 
  "ADD ", 
  "SWAP2 ", 
  "MOD ", 
  "DUP2 ", 
  "SLOAD ", 
  "PUSH2 0x0100 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "EXP ", 
  "SWAP3 ", 
  "DUP4 ", 
  "MUL ", 
  "PUSH1 0xff ", 
  "SWAP4 ", 
  "DUP5 ", 
  "MUL ", 
  "NOT ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH1 0x01 ", 
  "SLOAD ", 
  "PUSH1 0x00 ", 
  "SLOAD ", 
  "SWAP2 ", 
  "AND ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x017b ", 
  "JUMPI ", 
  "JUMPDEST ", 
  "PUSH1 0xff ", 
  "DUP4 ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "DUP4 "
 ], 
 "overflow": false, 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [255, bvudiv_i(Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)),\n         some_var_12)]\nOutput: [Concat(0,\n       Extract(7,\n               0,\n               bvudiv_i(Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)),\n                        some_var_12)))]"
}