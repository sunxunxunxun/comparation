{
 "execution_paths": "87", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "166.480618", 
 "signedness": false, 
 "evm_code_coverage": "93.0", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "PUSH2 0x0a0b ", 
  "DUP6 ", 
  "DUP6 ", 
  "DUP6 ", 
  "DUP6 ", 
  "PUSH2 0x05a5 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "DUP11 ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0a30 ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "SWAP6 ", 
  "POP ", 
  "PUSH2 0x0a35 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "SWAP6 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "SWAP6 ", 
  "SWAP5 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP4 ", 
  "SWAP3 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP6 ", 
  "SWAP5 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "DUP7 ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x09cd ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH2 0x09d2 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "SWAP6 ", 
  "SWAP5 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP4 ", 
  "POP ", 
  "PUSH2 0x09f2 ", 
  "DUP9 ", 
  "PUSH2 0x0132 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x09fd ", 
  "DUP8 ", 
  "PUSH2 0x0132 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "POP "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [16, Id_24]\nOutput: [16*Id_24]\nOpcode: ADD\nInput: [16*Id_24, Id_25]\nOutput: [16*Id_24 + Id_25]\nOpcode: ADD\nInput: [115792089237316195423570985008687907853269984665640564039457584007913129639849L, Id_25]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639849 +\nId_25]\nOpcode: ADD\nInput: [115792089237316195423570985008687907853269984665640564039457584007913129639888L, Id_25]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639888 +\nId_25]", 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [255, Id_24]\nOutput: [Concat(0, Extract(7, 0, Id_24))]\nOpcode: AND\nInput: [255, Id_24]\nOutput: [Concat(0, Extract(7, 0, Id_24))]\nOpcode: AND\nInput: [255, 16*Id_24 + Id_25]\nOutput: [Concat(0, 16*Extract(7, 0, Id_24) + Extract(7, 0, Id_25))]"
}