{
 "execution_paths": "118", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "46.7167460918", 
 "signedness": false, 
 "evm_code_coverage": "86.2", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "SWAP1 ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "SWAP3 ", 
  "DUP4 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "JUMPDEST ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "PUSH2 0xffff ", 
  "STOP ", 
  "SWAP1 ", 
  "AND ", 
  "PUSH1 0x40 ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "PUSH1 0x60 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMP ", 
  "PUSH2 0x04b4 ", 
  "JUMPDEST ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMP ", 
  "MLOAD ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "JUMP ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "MLOAD ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "STOP ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "JUMPDEST ", 
  "STOP ", 
  "PUSH1 0x02 ", 
  "JUMP ", 
  "EXP ", 
  "SUB ", 
  "SWAP1 ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "SWAP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0703 ", 
  "AND ", 
  "STOP ", 
  "DUP4 ", 
  "PUSH2 0x0489 ", 
  "DUP2 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "MSTORE ", 
  "JUMPDEST ", 
  "SWAP3 ", 
  "SWAP2 ", 
  "DUP1 ", 
  "POP ", 
  "PUSH1 0x20 ", 
  "POP ", 
  "ADD ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "SUB ", 
  "SWAP1 ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP1 ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH2 0x0700 ", 
  "SWAP2 ", 
  "JUMP ", 
  "STOP ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "JUMP ", 
  "PUSH1 0x40 ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP1 ", 
  "POP ", 
  "PUSH2 0x04b4 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "JUMPDEST ", 
  "STOP ", 
  "SWAP1 ", 
  "POP ", 
  "JUMP ", 
  "POP ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH2 0xffff ", 
  "DUP1 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "POP ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN ", 
  "JUMPI ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "SWAP2 ", 
  "MLOAD ", 
  "PUSH2 0xffff ", 
  "RETURN ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "SWAP2 ", 
  "SUB ", 
  "SWAP1 ", 
  "RETURN "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [Id_12, Concat(0, Extract(47, 32, Ia_store_32))]\nOutput: [Id_12*Concat(0, Extract(47, 32, Ia_store_32))]\nOpcode: MUL\nInput: [Id_11, Concat(0, Extract(31, 16, Ia_store_32))]\nOutput: [Id_11*Concat(0, Extract(31, 16, Ia_store_32))]\nOpcode: MUL\nInput: [Id_5, Concat(0, Extract(15, 0, Ia_store_16))]\nOutput: [Id_5*Concat(0, Extract(15, 0, Ia_store_16))]\nOpcode: MUL\nInput: [Id_2, Concat(0, Extract(15, 0, Ia_store_32))]\nOutput: [Id_2*Concat(0, Extract(15, 0, Ia_store_32))]", 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [Id_16, 65535]\nOutput: [Concat(0, Extract(15, 0, Id_16))]\nOpcode: AND\nInput: [Id_18, 65535]\nOutput: [Concat(0, Extract(15, 0, Id_18))]\nOpcode: AND\nInput: [Id_10, 65535]\nOutput: [Concat(0, Extract(15, 0, Id_10))]\nOpcode: AND\nInput: [Id_7, 65535]\nOutput: [Concat(0, Extract(15, 0, Id_7))]"
}