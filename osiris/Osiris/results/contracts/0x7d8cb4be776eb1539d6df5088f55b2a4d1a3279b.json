{
 "execution_paths": "33", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "1090.37042284", 
 "signedness": false, 
 "evm_code_coverage": "70.4", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "DUP2 ", 
  "PUSH2 0xffff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "DUP4 ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "DUP13 ", 
  "DUP6 ", 
  "PUSH1 0x03 ", 
  "ADD ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP14 ", 
  "DUP7 ", 
  "PUSH1 0x02 ", 
  "ADD ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0x16 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH32 0xffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffff ", 
  "AND ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP3 ", 
  "DUP4 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP4 ", 
  "MUL ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH2 0x0100 ", 
  "MUL ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "ADD ", 
  "PUSH27 0x010000000000000000000000000000000000000000000000000000 ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH1 0x00 ", 
  "SWAP11 ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH1 0x08 ", 
  "DUP12 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x08f7 ", 
  "JUMPI ", 
  "DUP11 ", 
  "PUSH1 0x07 ", 
  "SUB ", 
  "PUSH1 0x08 ", 
  "MUL ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "DUP14 ", 
  "DUP13 ", 
  "DUP8 ", 
  "PUSH1 0x04 ", 
  "ADD ", 
  "ADD ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP2 ", 
  "MUL ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "MUL ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "ADD ", 
  "SWAP3 ", 
  "PUSH1 0x01 ", 
  "SWAP11 ", 
  "SWAP1 ", 
  "SWAP11 ", 
  "ADD ", 
  "SWAP10 ", 
  "PUSH2 0x08af ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x18 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH8 0xffffffffffffffff ", 
  "NOT ", 
  "AND ", 
  "DUP6 ", 
  "OR ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "DUP14 ", 
  "MLOAD ", 
  "PUSH8 0xffffffffffffffff ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "SWAP1 ", 
  "SWAP6 ", 
  "ADD ", 
  "PUSH1 0x0c ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP6 ", 
  "DUP15 ", 
  "SWAP2 ", 
  "PUSH1 0x0d ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP14 ", 
  "DUP7 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP2 ", 
  "MUL ", 
  "DIV ", 
  "PUSH1 0x10 ", 
  "MUL ", 
  "ADD ", 
  "PUSH1 0xff ", 
  "AND ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x0102 ", 
  "DUP4 ", 
  "EQ ", 
  "DUP1 ", 
  "ISZERO ", 
  "SWAP1 ", 
  "PUSH2 0x0986 ", 
  "JUMPI ", 
  "POP ", 
  "DUP3 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH1 0x10 ", 
  "EQ ", 
  "ISZERO ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "PUSH2 0x0990 ", 
  "JUMPI ", 
  "PUSH2 0x0002 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x18 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH10 0xffff0000000000000000 ", 
  "NOT ", 
  "AND ", 
  "PUSH9 0x010000000000000000 ", 
  "DUP6 ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "DUP13 ", 
  "MLOAD ", 
  "DUP14 ", 
  "SWAP1 ", 
  "PUSH2 0xffff ", 
  "DUP6 ", 
  "AND ", 
  "DUP8 ", 
  "ADD ", 
  "PUSH1 0x03 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP14 ", 
  "DUP5 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "DUP8 ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "ADD ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0x00 ", 
  "SWAP13 ", 
  "POP ", 
  "PUSH2 0xffff ", 
  "DUP6 ", 
  "AND ", 
  "SWAP1 ", 
  "SWAP7 ", 
  "ADD ", 
  "PUSH2 0x0224 ", 
  "ADD ", 
  "SWAP6 ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP2 ", 
  "MUL ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH2 0x0100 ", 
  "MUL ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "JUMPDEST ", 
  "PUSH2 0x0200 ", 
  "DUP12 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0a6e ", 
  "JUMPI ", 
  "DUP13 ", 
  "DUP12 ", 
  "DUP7 ", 
  "ADD ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "DUP2 ", 
  "DUP13 ", 
  "PUSH2 0x0200 ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MSTORE ", 
  "PUSH1 0x01 ", 
  "SWAP11 ", 
  "SWAP1 ", 
  "SWAP11 ", 
  "ADD ", 
  "SWAP10 ", 
  "PUSH2 0x0a27 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "PUSH1 0x1b ", 
  "SLOAD ", 
  "SWAP1 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "DUP1 ", 
  "DUP3 ", 
  "PUSH2 0x4000 ", 
  "DUP1 ", 
  "DUP4 ", 
  "DUP2 ", 
  "DUP5 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x04 ", 
  "PUSH2 0x060f ", 
  "CALL ", 
  "POP ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "EQ ", 
  "SWAP3 ", 
  "POP ", 
  "PUSH2 0x0a9d ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "JUMPI ", 
  "PUSH2 0x0002 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "PUSH1 0x01 ", 
  "SWAP13 ", 
  "SWAP12 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x18 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "SLOAD ", 
  "SWAP2 ", 
  "SWAP4 ", 
  "POP ", 
  "PUSH2 0x0aee ", 
  "SWAP2 ", 
  "DUP7 ", 
  "SWAP2 ", 
  "PUSH8 0xffffffffffffffff ", 
  "SWAP1 ", 
  "DUP2 ", 
  "AND ", 
  "PUSH3 0xffffff ", 
  "SWAP3 ", 
  "DUP4 ", 
  "AND ", 
  "PUSH1 0xa0 ", 
  "ADD ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "AND ", 
  "DUP3 ", 
  "ADD ", 
  "AND ", 
  "SWAP1 ", 
  "PUSH2 0x0214 ", 
  "JUMP ", 
  "JUMPDEST ", 
  "SWAP1 ", 
  "POP ", 
  "DUP2 ", 
  "PUSH1 0x02 ", 
  "DUP3 ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "DUP1 ", 
  "DUP3 ", 
  "DUP1 ", 
  "MLOAD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "DUP1 ", 
  "DUP4 ", 
  "DUP4 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x04 ", 
  "PUSH1 0x20 ", 
  "DUP5 ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "DIV ", 
  "PUSH1 0x03 ", 
  "MUL ", 
  "PUSH1 0x0f ", 
  "ADD ", 
  "CALL ", 
  "POP ", 
  "DUP3 ", 
  "ADD ", 
  "SWAP4 ", 
  "POP ", 
  "PUSH1 0x20 ", 
  "SWAP3 ", 
  "DUP1 ", 
  "DUP6 ", 
  "SUB ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "DUP7 ", 
  "PUSH2 0x61da ", 
  "GAS ", 
  "SUB ", 
  "CALL ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x40 ", 
  "MLOAD ", 
  "MLOAD ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0b46 ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "SWAP3 ", 
  "POP ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "POP ", 
  "JUMP ", 
  "SWAP4 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP14 ", 
  "DUP7 ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "PUSH1 0xf8 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH2 0x0100 ", 
  "MUL ", 
  "ADD ", 
  "PUSH1 0x16 ", 
  "PUSH1 0x18 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "DUP2 ", 
  "SLOAD "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [Concat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               Concat(0,\n                      Extract(255, 248, mem_[128 + Id_12])))), some_var_11]\nOutput: [some_var_11*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               Concat(0,\n                      Extract(255, 248, mem_[128 + Id_12]))))]\nOpcode: ADD\nInput: [some_var_11*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               Concat(0,\n                      Extract(255, 248, mem_[128 + Id_12])))), some_var_12*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               Concat(0,\n                      Extract(255, 248, mem_[129 + Id_12]))))]\nOutput: [some_var_11*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               Concat(0,\n                      Extract(255, 248, mem_[128 + Id_12])))) +\nsome_var_12*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               Concat(0,\n                      Extract(255, 248, mem_[129 + Id_12]))))]\nOpcode: MUL\nInput: [8, 115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nId_13]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639928 +\n8*Id_13]", 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [some_var_11*\nConcat(0,\n       Extract(255,\n               248,\n               452312848583266388373324160190187140051835877600158453279131187530910662656*\n               Concat(0,\n                      Extract(255, 248, mem_[128 + Id_12])))), 18446744073709551615L]\nOutput: [Concat(0,\n       Extract(63, 0, some_var_11)*\n       Concat(0,\n              Extract(255,\n                      248,\n                      452312848583266388373324160190187140051835877600158453279131187530910662656*\n                      Concat(0,\n                             Extract(255,\n                                     248,\n                                     mem_[128 + Id_12])))))]"
}