{
 "execution_paths": "86", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": "\nOpcode: DIV\nInput: [Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)), some_var_5]\nOutput: [bvudiv_i(Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)),\n         some_var_5)]", 
 "execution_time": "144.415822029", 
 "signedness": false, 
 "evm_code_coverage": "85.0", 
 "underflow": "\nOpcode: SUB\nInput: [Ia_store_976292505869117087192917925327000492395383345078802666268307517891126277410 +\n115792089237316195423570985008687907853269984665640564039457584007913129639935*\nId_17, Id_17]\nOutput: [Ia_store_976292505869117087192917925327000492395383345078802666268307517891126277410 +\n115792089237316195423570985008687907853269984665640564039457584007913129639934*\nId_17]\nOpcode: SUB\nInput: [Iv +\nIa_store_976292505869117087192917925327000492395383345078802666268307517891126277410, 5000000000000000*some_var_4]\nOutput: [Iv +\nIa_store_976292505869117087192917925327000492395383345078802666268307517891126277410 +\n115792089237316195423570985008687907853269984665640564039457579007913129639936*\nsome_var_4]", 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "STOP ", 
  "JUMPDEST ", 
  "SWAP2 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP1 ", 
  "PUSH1 0x08 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DIV ", 
  "ADD ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "MOD ", 
  "PUSH1 0x04 ", 
  "MUL ", 
  "DUP7 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH1 0x10 ", 
  "DUP10 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "SWAP1 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "DUP2 ", 
  "SLOAD ", 
  "DUP2 ", 
  "PUSH4 0xffffffff ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP1 ", 
  "DUP4 ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "MUL ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "POP ", 
  "DUP4 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x0ca9 ", 
  "JUMPI ", 
  "PUSH1 0x01 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "PUSH1 0x00 ", 
  "PUSH2 0x0100 ", 
  "DUP2 ", 
  "SWAP1 ", 
  "EXP ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "DIV ", 
  "DUP2 ", 
  "AND ", 
  "DUP2 ", 
  "AND ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x05 ", 
  "PUSH1 0x20 ", 
  "DUP1 ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "ADD ", 
  "SWAP1 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "DUP5 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH2 0x0ddb ", 
  "JUMP ", 
  "JUMPDEST ", 
  "PUSH1 0x00 ", 
  "SLOAD ", 
  "DUP4 ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0cb6 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "SWAP2 ", 
  "POP ", 
  "POP ", 
  "DUP1 ", 
  "DUP3 ", 
  "SUB ", 
  "PUSH1 0x02 ", 
  "DUP2 ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0cc9 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "DIV ", 
  "PUSH1 0x05 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x02 ", 
  "PUSH1 0x00 ", 
  "PUSH1 0x01 ", 
  "DUP10 ", 
  "SUB ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH1 0x10 ", 
  "DUP12 ", 
  "PUSH2 0xffff ", 
  "AND ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "SWAP1 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "MUL ", 
  "OR ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "PUSH4 0xffffffff ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "PUSH2 0x0100 ", 
  "EXP ", 
  "SWAP1 ", 
  "DIV ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "PUSH1 0x00 ", 
  "DUP3 ", 
  "DUP3 ", 
  "SLOAD ", 
  "ADD ", 
  "SWAP3 ", 
  "POP ", 
  "POP ", 
  "DUP2 ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "PUSH1 0x02 ", 
  "DUP2 ", 
  "DUP2 ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0d54 ", 
  "JUMPI ", 
  "ASSERTFAIL ", 
  "JUMPDEST ", 
  "PUSH1 0x10 ", 
  "PUSH1 0x02 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "EXP ", 
  "PUSH4 0xffffffff ", 
  "PUSH1 0x01 ", 
  "DUP11 ", 
  "DUP2 ", 
  "ADD ", 
  "PUSH2 0xffff ", 
  "SWAP1 ", 
  "DUP2 ", 
  "AND ", 
  "DUP4 ", 
  "AND ", 
  "SWAP4 ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "MUL ", 
  "DUP2 ", 
  "DUP12 ", 
  "SUB ", 
  "SWAP4 ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "AND ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "OR ", 
  "DUP2 ", 
  "AND ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "DUP1 ", 
  "DUP3 ", 
  "ADD ", 
  "SWAP4 ", 
  "DUP5 ", 
  "MSTORE ", 
  "DUP4 ", 
  "ADD ", 
  "DUP1 ", 
  "DUP3 ", 
  "SHA3 ", 
  "SLOAD ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "PUSH2 0x0100 ", 
  "DUP5 ", 
  "SWAP1 ", 
  "EXP ", 
  "SWAP2 ", 
  "DUP3 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP2 ", 
  "AND ", 
  "DUP2 ", 
  "AND ", 
  "DUP2 ", 
  "AND ", 
  "DUP5 ", 
  "MSTORE ", 
  "PUSH1 0x05 ", 
  "DUP1 ", 
  "DUP8 ", 
  "MSTORE ", 
  "DUP4 ", 
  "DUP6 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP10 ", 
  "SWAP1 ", 
  "SWAP9 ", 
  "DIV ", 
  "SWAP9 ", 
  "SWAP1 ", 
  "SWAP9 ", 
  "ADD ", 
  "SWAP1 ", 
  "SWAP7 ", 
  "SSTORE ", 
  "SWAP3 ", 
  "SLOAD ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "SWAP3 ", 
  "DIV ", 
  "DUP5 ", 
  "AND ", 
  "DUP5 ", 
  "AND ", 
  "SWAP1 ", 
  "SWAP4 ", 
  "AND ", 
  "DUP4 ", 
  "MSTORE ", 
  "SWAP3 ", 
  "SWAP1 ", 
  "MSTORE ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "JUMPDEST ", 
  "PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 ", 
  "PUSH1 0x05 ", 
  "PUSH1 0x00 ", 
  "CALLER ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "AND ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SLOAD ", 
  "LT ", 
  "ISZERO ", 
  "ISZERO ", 
  "PUSH2 0x0e2e ", 
  "JUMPI ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "REVERT ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x01 ", 
  "PUSH1 0xa0 ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "SUB ", 
  "CALLER ", 
  "DUP2 ", 
  "AND ", 
  "AND ", 
  "PUSH1 0x00 ", 
  "DUP2 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x08 ", 
  "PUSH1 0x20 ", 
  "DUP1 ", 
  "DUP4 ", 
  "ADD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "MSTORE ", 
  "DUP2 ", 
  "ADD ", 
  "DUP1 ", 
  "DUP4 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "PUSH2 0x0100 ", 
  "DUP6 ", 
  "SWAP1 ", 
  "EXP ", 
  "DUP1 ", 
  "DUP3 ", 
  "DIV ", 
  "PUSH4 0xffffffff ", 
  "SWAP1 ", 
  "DUP2 ", 
  "AND ", 
  "PUSH2 0xffff ", 
  "SWAP1 ", 
  "SWAP11 ", 
  "AND ", 
  "PUSH1 0x02 ", 
  "EXP ", 
  "PUSH1 0x01 ", 
  "DUP3 ", 
  "AND ", 
  "MUL ", 
  "SWAP10 ", 
  "SWAP1 ", 
  "SWAP10 ", 
  "ADD ", 
  "DUP10 ", 
  "AND ", 
  "DUP2 ", 
  "MUL ", 
  "SWAP9 ", 
  "MUL ", 
  "NOT ", 
  "AND ", 
  "SWAP7 ", 
  "SWAP1 ", 
  "SWAP7 ", 
  "OR ", 
  "SWAP1 ", 
  "SWAP6 ", 
  "SSTORE ", 
  "SWAP2 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x04 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "MSTORE ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "SHA3 ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "SSTORE ", 
  "POP ", 
  "JUMP "
 ], 
 "overflow": "\nOpcode: MUL\nInput: [some_var_1, 5000000000000000]\nOutput: [5000000000000000*some_var_1]", 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [4294967295, bvudiv_i(Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)),\n         some_var_5)]\nOutput: [Concat(0,\n       Extract(31,\n               0,\n               bvudiv_i(Ia_store_19224855404247632006917173431419498680506051063941070371722880450128577361118 +\nConcat(0, Extract(255, 3, Id_20)),\n                        some_var_5)))]\nOpcode: AND\nInput: [Id_3, 65535]\nOutput: [Concat(0, Extract(15, 0, Id_3))]"
}