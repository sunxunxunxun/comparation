{
 "execution_paths": "35", 
 "callstack": false, 
 "reentrancy": true, 
 "modulo": false, 
 "division": false, 
 "execution_time": "510.294440985", 
 "signedness": false, 
 "evm_code_coverage": "89.0", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "SHA3 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "DUP2 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "SHA3 ", 
  "ADD ", 
  "SWAP2 ", 
  "POP ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 ", 
  "SHA3 "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [4, mem_[64]]\nOutput: [4 + mem_[64]]\nOpcode: ADD\nInput: [4, mem_[64]]\nOutput: [4 + mem_[64]]\nOpcode: ADD\nInput: [64, mem_[64]]\nOutput: [64 + mem_[64]]\nOpcode: ADD\nInput: [4, mem_[64]]\nOutput: [4 + mem_[64]]", 
 "money_concurrency": true, 
 "truncation": false
}