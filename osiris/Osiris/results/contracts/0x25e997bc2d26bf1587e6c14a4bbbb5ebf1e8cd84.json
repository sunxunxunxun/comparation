{
 "execution_paths": "128", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": false, 
 "execution_time": "1220.36288095", 
 "signedness": false, 
 "evm_code_coverage": "97.4", 
 "underflow": "\nOpcode: SUB\nInput: [bvudiv_i(57896044618658097711785492504343953926634992332820282019728792003956564819968*\n         bvurem_i(Id_8, Id_10) +\n         170141183460469231731687303715884105728*Id_9,\n         Concat(0,\n                Extract(255,\n                        128,\n                        57896044618658097711785492504343953926634992332820282019728792003956564819968*\n                        Id_10))), 1]\nOutput: [115792089237316195423570985008687907853269984665640564039457584007913129639935 +\nbvudiv_i(57896044618658097711785492504343953926634992332820282019728792003956564819968*\n         bvurem_i(Id_8, Id_10) +\n         170141183460469231731687303715884105728*Id_9,\n         Concat(0,\n                Extract(255,\n                        128,\n                        57896044618658097711785492504343953926634992332820282019728792003956564819968*\n                        Id_10)))]", 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "STOP ", 
  "JUMPDEST ", 
  "PUSH2 0x0a26 ", 
  "DUP8 ", 
  "DUP8 ", 
  "PUSH2 0x08ea ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "SWAP4 ", 
  "POP ", 
  "DUP2 ", 
  "SWAP5 ", 
  "POP ", 
  "DUP3 ", 
  "SWAP6 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "PUSH2 0x0a3d ", 
  "DUP3 ", 
  "DUP4 ", 
  "DUP4 ", 
  "DUP8 ", 
  "PUSH2 0x0a9a ", 
  "GT ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "SWAP4 ", 
  "POP ", 
  "DUP2 ", 
  "SWAP5 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "PUSH2 0x0a50 ", 
  "DUP3 ", 
  "DUP3 ", 
  "DUP8 ", 
  "PUSH2 0x0a9a ", 
  "JUMP ", 
  "JUMPDEST ", 
  "DUP1 ", 
  "SWAP8 ", 
  "POP ", 
  "DUP2 ", 
  "SWAP9 ", 
  "POP ", 
  "POP ", 
  "POP ", 
  "DUP7 ", 
  "PUSH1 0x80 ", 
  "DUP5 ", 
  "SWAP1 ", 
  "PUSH1 0x02 ", 
  "POP ", 
  "EXP ", 
  "MUL ", 
  "ADD ", 
  "SWAP4 ", 
  "POP ", 
  "PUSH2 0x0a6a ", 
  "JUMP ", 
  "JUMPDEST ", 
  "JUMPDEST ", 
  "DUP11 "
 ], 
 "overflow": "\nOpcode: ADD\nInput: [bvudiv_i(57896044618658097711785492504343953926634992332820282019728792003956564819968*\n         bvurem_i(Id_8, Id_10) +\n         170141183460469231731687303715884105728*Id_9,\n         Concat(0,\n                Extract(255,\n                        128,\n                        57896044618658097711785492504343953926634992332820282019728792003956564819968*\n                        Id_10))), 340282366920938463463374607431768211456*\nbvudiv_i(Id_8, Id_10)]\nOutput: [bvudiv_i(57896044618658097711785492504343953926634992332820282019728792003956564819968*\n         bvurem_i(Id_8, Id_10) +\n         170141183460469231731687303715884105728*Id_9,\n         Concat(0,\n                Extract(255,\n                        128,\n                        57896044618658097711785492504343953926634992332820282019728792003956564819968*\n                        Id_10))) +\n340282366920938463463374607431768211456*\nbvudiv_i(Id_8, Id_10)]\nOpcode: ADD\nInput: [Concat(0,\n       Extract(255,\n               128,\n               Concat(0, Extract(127, 0, Id_3))*\n               Concat(0, Extract(127, 0, Id_4)))), Concat(0, Extract(127, 0, Id_4)*Extract(255, 128, Id_3))]\nOutput: [Concat(0,\n       Extract(255,\n               128,\n               Concat(0, Extract(127, 0, Id_3))*\n               Concat(0, Extract(127, 0, Id_4)))) +\nConcat(0, Extract(127, 0, Id_4)*Extract(255, 128, Id_3))]\nOpcode: MUL\nInput: [340282366920938463463374607431768211456L, bvurem_i(57896044618658097711785492504343953926634992332820282019728792003956564819968*\n         bvurem_i(Id_8, Id_10) +\n         170141183460469231731687303715884105728*Id_9,\n         Concat(0,\n                Extract(255,\n                        128,\n                        57896044618658097711785492504343953926634992332820282019728792003956564819968*\n                        Id_10))) +\n2*\nConcat(0,\n       Extract(255,\n               128,\n               57896044618658097711785492504343953926634992332820282019728792003956564819968*\n               Id_10))]\nOutput: [340282366920938463463374607431768211456*\nbvurem_i(57896044618658097711785492504343953926634992332820282019728792003956564819968*\n         bvurem_i(Id_8, Id_10) +\n         170141183460469231731687303715884105728*Id_9,\n         Concat(0,\n                Extract(255,\n                        128,\n                        57896044618658097711785492504343953926634992332820282019728792003956564819968*\n                        Id_10))) +\n680564733841876926926749214863536422912*\nConcat(0,\n       Extract(255,\n               128,\n               57896044618658097711785492504343953926634992332820282019728792003956564819968*\n               Id_10))]\nOpcode: MUL\nInput: [340282366920938463463374607431768211456L, bvudiv_i(Id_8, Id_10)]\nOutput: [340282366920938463463374607431768211456*\nbvudiv_i(Id_8, Id_10)]", 
 "money_concurrency": true, 
 "truncation": "\nOpcode: AND\nInput: [Id_4, 340282366920938463463374607431768211455L]\nOutput: [Concat(0, Extract(127, 0, Id_4))]\nOpcode: AND\nInput: [Id_3, 340282366920938463463374607431768211455L]\nOutput: [Concat(0, Extract(127, 0, Id_3))]"
}