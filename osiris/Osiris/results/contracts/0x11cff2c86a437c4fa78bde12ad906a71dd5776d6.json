{
 "execution_paths": "12", 
 "callstack": false, 
 "reentrancy": false, 
 "modulo": false, 
 "division": "\nOpcode: DIV\nInput: [Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)), some_var_52]\nOutput: [bvudiv_i(Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)),\n         some_var_52)]", 
 "execution_time": "40.0485601425", 
 "signedness": false, 
 "evm_code_coverage": "63.4", 
 "underflow": false, 
 "time_dependency": false, 
 "assertion_failure": false, 
 "timeout": false, 
 "dead_code": [
  "ADD ", 
  "SWAP2 ", 
  "MOD ", 
  "DUP2 ", 
  "SLOAD ", 
  "PUSH2 0x0100 ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "EXP ", 
  "SWAP3 ", 
  "DUP4 ", 
  "MUL ", 
  "PUSH1 0xff ", 
  "SWAP4 ", 
  "DUP5 ", 
  "MUL ", 
  "NOT ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "AND ", 
  "OR ", 
  "SWAP1 ", 
  "SSTORE ", 
  "PUSH1 0x01 ", 
  "SLOAD ", 
  "PUSH1 0x00 ", 
  "SLOAD ", 
  "SWAP2 ", 
  "AND ", 
  "EQ ", 
  "ISZERO ", 
  "PUSH2 0x01cf ", 
  "JUMPI ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "DUP3 ", 
  "DUP5 ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DUP2 ", 
  "MUL ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "ADD ", 
  "ADD ", 
  "DUP2 ", 
  "SWAP1 ", 
  "MSTORE ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "SLOAD ", 
  "SWAP2 ", 
  "DUP3 ", 
  "ADD ", 
  "DUP1 ", 
  "DUP3 ", 
  "SSTORE ", 
  "DUP3 ", 
  "DUP1 ", 
  "ISZERO ", 
  "DUP3 ", 
  "SWAP1 ", 
  "GT ", 
  "PUSH2 0x01db ", 
  "JUMPI ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP2 ", 
  "PUSH1 0x1f ", 
  "ADD ", 
  "PUSH1 0x20 ", 
  "SWAP1 ", 
  "DIV ", 
  "DUP4 ", 
  "PUSH1 0x00 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "PUSH1 0x00 ", 
  "SHA3 ", 
  "SWAP2 ", 
  "DUP3 ", 
  "ADD ", 
  "SWAP2 ", 
  "ADD ", 
  "PUSH2 0x01db ", 
  "SWAP2 ", 
  "SWAP1 ", 
  "PUSH2 0x0074 ", 
  "JUMP ", 
  "POP ", 
  "DUP2 ", 
  "DUP4 ", 
  "PUSH1 0xff ", 
  "AND ", 
  "DUP2 ", 
  "MLOAD ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "ADD ", 
  "SWAP1 ", 
  "PUSH1 0x20 ", 
  "MUL ", 
  "ADD ", 
  "MLOAD ", 
  "PUSH1 0xff ", 
  "AND ", 
  "PUSH1 0x01 ", 
  "EQ ", 
  "JUMPDEST ", 
  "ISZERO ", 
  "PUSH2 0x024c ", 
  "JUMPI ", 
  "JUMPDEST ", 
  "PUSH1 0x01 ", 
  "ADD ", 
  "PUSH2 0x012f ", 
  "JUMP ", 
  "JUMPDEST ", 
  "POP ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "DUP1 ", 
  "SLOAD ", 
  "DUP7 ", 
  "SWAP4 ", 
  "POP ", 
  "SWAP1 ", 
  "SWAP2 ", 
  "POP ", 
  "PUSH1 0x00 ", 
  "NOT ", 
  "DUP2 ", 
  "ADD ", 
  "SWAP1 ", 
  "DUP2 ", 
  "LT ", 
  "ISZERO ", 
  "PUSH2 0x0002 ", 
  "JUMPI ", 
  "SWAP1 ", 
  "DUP1 ", 
  "MSTORE ", 
  "PUSH1 0x20 ", 
  "DUP1 ", 
  "DUP3 ", 
  "DIV ", 
  "PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563 "
 ], 
 "overflow": false, 
 "money_concurrency": false, 
 "truncation": "\nOpcode: AND\nInput: [255, bvudiv_i(Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)),\n         some_var_52)]\nOutput: [Concat(0,\n       Extract(7,\n               0,\n               bvudiv_i(Ia_store_18569430475105882587588266137607568536673111973893317399460219858819262702947 +\nConcat(0, Extract(255, 5, Id_2)),\n                        some_var_52)))]"
}